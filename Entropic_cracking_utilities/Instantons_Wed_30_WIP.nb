(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    717688,      13899]
NotebookOptionsPosition[    701006,      13626]
NotebookOutlinePosition[    701353,      13641]
CellTagsIndexPosition[    701310,      13638]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{" ", "ztw"}]], "Input",
 CellChangeTimes->{{3.7971345343992443`*^9, 
  3.7971345363011694`*^9}},ExpressionUUID->"7e90b03c-c78e-4cec-a0c0-\
359cff093c0e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"langer", "[", 
   RowBox[{"x_", ",", "alfa_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"x", "^", "2"}], "+", 
   RowBox[{"alfa", "*", 
    RowBox[{"x", "^", "4"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"doublewell", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "4"}], ")"}], "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "-", "1"}], ")"}], "^", 
    "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paper", "[", 
   RowBox[{"a_", ",", "mu_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"mu", "^", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"a", "^", "2"}]}], ")"}]}], ")"}]}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "-", 
       RowBox[{"a", "^", "2"}]}], ")"}], "^", "2"}]}], "+", 
   RowBox[{
    RowBox[{"mu", "^", "2"}], "*", 
    RowBox[{
     RowBox[{"a", "^", "4"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "*", 
       RowBox[{"a", "^", "2"}]}], ")"}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paperone", "[", 
   RowBox[{"a_", ",", "mu_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"mu", "^", "2"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "*", 
       RowBox[{"a", "^", "2"}]}], ")"}]}], ")"}], "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "-", 
      RowBox[{"a", "^", "2"}]}], ")"}], "^", "2"}]}]}]}], "Input",
 CellChangeTimes->{{3.7967924867316494`*^9, 3.7967925300653105`*^9}, {
  3.7970004681715117`*^9, 3.797000543231666*^9}, {3.7970062379829483`*^9, 
  3.797006260834446*^9}},ExpressionUUID->"6e22ecad-c5d4-4571-882e-\
85eb5988ae58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"langer", "[", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"doublewell", "[", "x", "]"}]}], ",", " ", 
     RowBox[{"paper", "[", 
      RowBox[{"1", ",", "1", ",", "x"}], "]"}], ",", 
     RowBox[{"paper", "[", 
      RowBox[{"0.5", ",", "1.2", ",", "x"}], "]"}], ",", 
     RowBox[{"paperone", "[", 
      RowBox[{"1", ",", "1", ",", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.79679253787421*^9, 3.7967925611290483`*^9}, {
  3.7967926040171766`*^9, 3.796792635384538*^9}, {3.796792669723566*^9, 
  3.7967926903140955`*^9}, {3.797000549846855*^9, 3.797000557793959*^9}, {
  3.797006264985908*^9, 3.7970062739682074`*^9}, {3.797076258348878*^9, 
  3.797076311409202*^9}},ExpressionUUID->"735489b4-7b1d-4ad4-b223-\
bb4dbaf82f6b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$4350614#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$4350614#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
75P9H/6mApQ=
          "]]}, Annotation[#, "Charting`Private`Tag$4350614#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$4350614#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4350614#5"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.5, 1.5}, {-1.0609357746836081`, 0.7812497704081852}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"langer", "(", 
         RowBox[{"x", ",", 
           RowBox[{"-", "1"}]}], ")"}], 
       RowBox[{"-", 
         RowBox[{"doublewell", "(", "x", ")"}]}], 
       RowBox[{"paper", "(", 
         RowBox[{"1", ",", "1", ",", "x"}], ")"}], 
       RowBox[{"paper", "(", 
         RowBox[{"0.5`", ",", "1.2`", ",", "x"}], ")"}], 
       RowBox[{"paperone", "(", 
         RowBox[{"1", ",", "1", ",", "x"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.796792563409768*^9, {3.7967925982064705`*^9, 3.796792637055989*^9}, {
   3.7967926716280055`*^9, 3.796792694108594*^9}, 3.797000560484027*^9, 
   3.7970008025146546`*^9, 3.7970062794040112`*^9, {3.79707626717529*^9, 
   3.79707631255828*^9}},ExpressionUUID->"2a6797f0-99c1-4c8d-ad14-\
fbe9dd43f8aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"langerstat", "[", 
   RowBox[{"x_", ",", "alfa_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "/", 
     RowBox[{"-", "alfa"}]}], "]"}], "*", 
   RowBox[{"Sech", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", "2", "]"}], "*", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.796792714817508*^9, 3.796792769146415*^9}, 
   3.7967929028352394`*^9},ExpressionUUID->"5b8bdd49-68cc-4a29-9110-\
2a3d6cb7d9b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"langerstat", "[", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7967929097592077`*^9, 
  3.7967929448467674`*^9}},ExpressionUUID->"5dbb0550-6f36-431b-97ef-\
9e40ddab3fb9"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Suhp7y0ypgz707TXDOD/+qew/++f+h8nlREj
       "]]},
     Annotation[#, "Charting`Private`Tag$847894#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {0., 0.9999994076420499}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.796792928910303*^9, 3.7967929466208224`*^9}, 
   3.797000802668084*^9},ExpressionUUID->"4a44f9a4-d00b-4972-882e-\
445a40a568b5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bubbleone", "[", 
   RowBox[{"x_", ",", "alfa_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"3", "/", "4"}], "]"}], "*", 
   RowBox[{"2", "^", 
    RowBox[{"(", 
     RowBox[{"1", "/", "4"}], ")"}]}], "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Sech", "[", 
      RowBox[{"x", "*", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}], ")"}], "^", 
    "2"}]}]}]], "Input",
 CellChangeTimes->{{3.796792953675008*^9, 
  3.796793001514408*^9}},ExpressionUUID->"95b9febe-95df-4a09-8158-\
04c4c7deebb7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bubbletwo", "[", 
   RowBox[{"x_", ",", "alfa_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"3", "/", "4"}], "]"}], "*", 
   RowBox[{"2", "^", 
    RowBox[{"(", 
     RowBox[{"1", "/", "4"}], ")"}]}], "*", 
   RowBox[{
    RowBox[{"Sinh", "[", 
     RowBox[{
      RowBox[{"Sqrt", "[", "2", "]"}], "*", "x"}], "]"}], "/", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Cosh", "[", 
       RowBox[{
        RowBox[{"Sqrt", "[", "2", "]"}], "*", "x"}], "]"}], ")"}], "^", 
     "2"}]}]}]}]], "Input",
 CellChangeTimes->{{3.796793014860718*^9, 3.796793035531679*^9}, {
  3.7967931002687693`*^9, 
  3.796793113667638*^9}},ExpressionUUID->"2ce41760-05f0-436c-bdd9-\
e7511cd84a68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bubbleone", "[", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", 
     RowBox[{"bubbletwo", "[", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.796793120808037*^9, 3.796793172056793*^9}, {
  3.796794155703638*^9, 
  3.796794159952612*^9}},ExpressionUUID->"9f628ed7-44f4-40eb-8004-\
e1c33bfb3b99"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$847937#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtmnc4V+//x+293yX0qVRKKJRKMl4nspqSmT0TkpWdKCEZmdnJXpWISLmP
EUL2Hm9vW1ZmZP7ev+v6/nPO9Tivc73O83nf9+t+Xee67qOmj9QtqCgoKArJ
l/+/P5m6uby3R8B768ojQ3P00aQn99rANgGXTUt84/RTH93iGF7/8o+AG6mf
4/X6rY/4pex3Hq0QcLmptxIbQgaoKiiCgTRJwFcenjj2Lt8AMYj2HMZ/EfC4
uXKDvlJDFOVsfN0ngYDzO/yRpXE1RjsMQrf0Ywm4WFJ8lNZLY2SZtKR2KZqA
J5m63/qeYIwka59pLYYS8EtL2Ur1uDHqP5BhYvyMgFNflmvoZjZB/OW/XbEH
BPyCDZP3TIYJyqN0SqeQJOBma5MU0TOm6NLdXLo4CQK+/13D3n1KM1SbPmJ1
VpyAh4VnBWrxmCGSstoZUyECfpqo/91fyQxxh54pqT5IwDUzlgwl083QM77p
On8KAq5S98t63dwc6UgYzLI0cOG31JoDZrYt0KRf1M2MWi68ebFD1fGAJXLq
bvwoW82FH9jny8Z3zhKFul92tvvGhZ/Q9LzccN8SVaMDOy0fuPDPO80mnzot
keiNdrbISC48IKq74Pvn+4jWQvkcrwEXvkOjYr8Q+gC1G57VntXlwoM0Nz6V
5j1AyToHvb5rceETI8kmafUP0MUbf36YqHHh35y5kvqprJGlxBvdXAUuPF3H
NaTTzRrVU075SAtz4boPWwQO2Nig4GT/FoN1TtyVf9F/8sFDpBNrvyq2yol/
5738nOHVQyQQcY+XaokT94xJarud/xB9fyFqljnDiZe+omK9/echWrDt/rsw
xInTm4yn7nO1Q2rSJw/71HDiVyQusI2GPEKE3h+2qeGceLV2MdfwnD3CRd4F
+oVy4rcy/7aF7dkj26de6ZavOHF2v+LzmlwOqPakxKDwC06cwm8GDl9yQB6P
U64XuXHivdR2S3l+DmiUy1O4xogT17xWfbHhqCMqvCk+PXGGE9cT+2hYbuuE
jN4x09QLc+IvmSJyRZ85IZa1ySO5gpx4yRRFZtkbJ2SZmKRtd5QT/8lwad+B
aifEN8tU93cfJ+4mrvNpmc8ZPQucyKDf5sAfJgg+uNrijNSr482EGjhwZjvT
LsJ1FyTQOU6sq+XA3wjHmP+0cEF/x0XvWVZz4GJPOVaSfVxQHF21Wto3Dvx8
tVpWbokLIqnOyh76yIFHVN7LURFwRQ9bpXk4ozjwoLtjYZW0bihwaLBpw4AD
55cfz64ZdUf3Fk6qvLnHgf/3WmijjtIDnd6zr76gzYG/lxK2W+T3QC38tF8d
1Thwnp4An09GHojb/EzWnDwHnsEYKvSP6IHSZp74kgQ58PT2nOjacU/k+UfW
9vUYO16nrBKRweaNEk0kp7EhdtzMSyQYxL3Rtw5x86VudpwkR9y3d8cb7X45
rq/ewI4r9pZ6/In2Rs98GG/s+8SOO8iVXo4/8hQFcXaJxHqz46qtu0mHD/mg
eAnb2be87LjLr7X7G0q+qDzD4r4agR3PPC3ZpHLPFw0eMBqjYGXHDe+k1H54
6IsOb98ZMKFgx0O5XYnlUb4otUay8fgUG26bt6kwNOaLcjSp87I+s+F5CrdC
1f2foVLXeOuPt9lw5pnzAl8Hn6Nj5g4ZvSpsuI0e7+HG1ecoRE2FRCnPhjct
UsA/Fj9kKvRXU+M8G84SIvj8vawfYh64c+UfDxueEnFnyz3FDxnKMfIojLLi
9qspD6tsXiBqWrcf3c6suGp5ZTwPXwCyW7pFQWHHikuI6J7ivhiAeodOSAvd
Z8W9L8cmXlAPQPklHQWeuqy4+oObQ/1BAUjLSiyRX44Vj+2UUKneCUDZjZOO
1vSs+NRf6w/iM4HoVoQm/24cC97wiVj8kRiEPM6xqypHsuDvpFt4MnaDUGZ7
vcPrYBZc6Nk3d/zwK7TLJVN97CkLPn//5MwDo1fofeQxS2VzFnzH8pBv8Ogr
xBL9J++1KAvOYknFK7UYjBrevJQ8Xs2MD392XXoqHIb+SioY235jxlem696+
vh2GjvVuBxYXM+P2MTf1fjmHIQ8e+37lbGZct/5iYyMKQ0JxWk9sQ5jxQ0hP
eEnkNQqMP15drM2Mkw4TAtTrXyPlpO+3VOaYcNPEeWFqQgRaDBncpplkwrN1
/lWzCUageO+t3MphJvygjUCkuHQEmjOSopfuYML5So9e/GIWgSKOFaMzX5lw
r9p3VzuKIxAxK1+cEMiEq1zsCNY3jEQuhQlcxONM+Fuh9q4HlVGIP+0rHn+I
CQ/87Nf/sDcK/Yzss9M+wITzGggYvPoThf57fKCxlYkJp+ppv0E4HI2qJCOf
Vy8x4jXH5Zd0vaIR2/eg1WzEiLt8SgkbkI1BmXXu3U56jHgPPSPy6XqD4s65
KORoMOI6TxithJbfoOAkxwLiTUZcq1vQfZUtFjk62QSpYow4TmnqtqwSi2SP
GMgdOcGIGynOPI6oiEWdLlhmwwIDbhzGZhVQEIeoTtK7HH3GgD8h3DRzLUhA
a6+px7Q8GXDCwZc+eFsCmt7aux3szIBLMr18dXYlATW3bQitWzLgAf3WQsEX
E1Hck5mhpusMuFQLY90plIjEu34puu1nwAeyD2kJ9yYhQ7+o/S3Z9LimfMxL
nf0pqBn+0rul0uOX299VmQqmINjS3uRPpMdJQCHkK5WC+B0PDjuGkeNJ13s2
DVLQqFFqNrcLPf5Y8vm58awUZCldIG2oQI/fczm3ngrvkN1yo8n8EB1+6mCh
t8vTVER8f0YjpocOf2BzOFEiKhXdfhCmBG10eKul9Rh9TioSJ6mLhNfQ4epX
mbT+tqei5V99q+fz6PCGMPnkecE05JIzFeDlRocP0h/M1+9OQ97G1B+YCXQ4
l6cZ96ZiBipoUQ7tZKHDPW5ebNE2yECjcsF2SXR0eJm+B2eLcwZSOrRfTGyT
Fv+9YprClJ6B2PpPFqiP0OIW27KLpdSZKPnutcK4j7T4jNa+Tab6TISUwksE
b9Din8W18NsW2Wi5uCtmUZEW/y+ul5vbJxsJnOBzLQNaXGLvS/K/+GwUSJ0m
eV2CFicI2yGetmykhn8uteOjxYsUCou/yuUgklTv1+JpGjw6hc4i50guojhz
BCm8oMHLnDZGDvzLQ17cVwxfeNPgSipup4358tH6nulOrSsNXpobUdoinY8W
2jOlr1nT4JJDDNdOPM1HA26ipWq3aXA6LufrH+nfo5Ia2U8GvDR4nlKb+H3+
D+ihvn6a63tqPMBuhdh3qQBNK3rLl2VS4z1OmrFHbhQgc7GUkc231LhqyLNl
T6MCdI9q/Ih3BDV+hxn9cfMvQCrZNol+rtR40flBkn9XARJY9YgOv0KNv5VN
DmJ0+4T6X8UF5HVR4Qw59EWWLYWo4wd/vnELFY4u/5G8MF6ImvayWvf/pMKF
6v3M+P4VogqnEl6fb1T40fGXLELHi1CqXkeeRhoVrt/DIX3PrQhZi7C27thT
4V8Cclb5BT+jrQYfHjUWKvzUwpFbszHFaJWGQZaWjgpf3vov+vuHYrQgF2by
dY8SX335+k1ObTEiFSblCqxQ4gnjHy+2/C1GNfFfZf71UeJf6FdK7+qUoGDr
VePULEo8Y+PAlA7/F/Qfk1XOqjwlzun16gPHj1JkWNEUfEyGEpf5dWM9drQU
vXM8a692gRJvilXyUKAoQycHNi/mC1Lip6NV0J50GRLLD6kxY6HE1T68k+Ut
LkPyt4qG27socN5p5oOL77+iBxG7+z9ZUeDz7Md8zpV/Q/lKZv+IJhS4TQFt
merQN7SwWTfIokeB75dM7w/Y+4YczcLTrG5S4Cq3Ljq5X/2OvM4LnOU/R4Fn
B1pKX2z9jg6/j4w9vL6H1nb+Pbj0pwLZXBCmHfhvD4U+SGK+nIkjR9qyLBf2
PSTA1SvnXYYjjy7la1xUe4gvgzuqpwlHQY8twlSndtEt/+TFnys4yi1O4S39
tIuKa9n9P8pXot8XDohGK+0i0jNUEzpeie5fpNG+bb+DlHfFFI9JVSM7ush/
M6Y7yM4y3FXsdjVy6T6a6K+5gzLGXU5pWFQjfxcY+X55B0mLjt4eD69GmSUe
Nqdpd5DFmm3Z0blqNHFx6Slj/DYSj/Nf5M+oQWaSxOzq6i00f5Tg916oFllm
S2opfdlCaWL3/jt4pRZZ84ZT/8zdQuwf9Vne6tQi+y0Fw+bwLbQpTnVqJqAW
eaEcQp/RFgqU6vwSOlWLopQfey9sbaKPqTuX/surQ7XaLBq85zeRjbzIQrzC
TyTsdnnPLn0Dsdfa5cK3JoQP3RIei9lAYq6nurgGm5CWgpmm9ssNZHDhYw/V
dhN6xhacB3YbyJH08KGUzC/Ulz6kzXFpA2WvRdFSVvxCgW0+BZ8a11HlFYef
/2qb0aRwncnq8l9UPMmdKu3ait4N3a1xv7KGRiKe6D+qb0dTvvtllHmWUSdY
T2RH9SCmJx//RDItI7Yp94XbuT1I1E01jbS9hEBJkGYT9SAXuydMHiNLaJa0
IK8124Po9CZ683OXyPMQpSYo34sEzhc/5pJdQmfnQ7ln/vQi00mNj0Mmi2jd
LKErS7Uf+Y8smAprLKKhqcC+/Ub9KHcwkNtVaRGFeObzejn3o+X2b084RBZR
jdBkstjbfkT1VDXWf/oPWlS1e3dytR/B2d9td1j/oJ9vaKn+JAygr9GnFKe1
5tGtn6YH7YcHEYPelBmlzDzyPqHilrw8iLT4M5/xHZ1HR4Wa84pph9By7nH8
xuwc+vVDSDVRZAgJ4YelPz2dQ/4D7bNSLkModmbfWY/sWZTN7W4vSkdEkx87
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
zwU=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$847937#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"bubbleone", "(", 
         RowBox[{"x", ",", 
           RowBox[{"-", "1"}]}], ")"}], 
       RowBox[{"bubbletwo", "(", 
         RowBox[{"x", ",", 
           RowBox[{"-", "1"}]}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7967931541343756`*^9, 3.796793174863779*^9}, 
   3.796794161936552*^9, 
   3.7970008029741917`*^9},ExpressionUUID->"a1a3fb61-2d2e-4552-b16e-\
24a9bffcb9e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"langerstat", "[", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}]}], "]"}], "+", 
     RowBox[{"bubbletwo", "[", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7967937487214036`*^9, 
  3.7967937572824965`*^9}},ExpressionUUID->"e6d35038-f0b0-41ff-8087-\
91a56a760ff0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtmnc01u//x297b8koiSiyQimp1/sToWFkkz3uJElWRJJZGSUjGWWEjKLM
hOudVSRkRSh7loxbNr/395zfP5zHeT5fz9frvq7Lda77HPvtbug7UpNIpCHi
x/9+35nUXtzZ4cEDZ0PKm1KY0YQf33L/Jg8+5HuGlVzJjHQ4f62Ur/HgNo4v
Lon1MiORE25bN5Z48LSWfoyKlwXVPnzCODRB+F9/qdKJYkGMst+F8a+E7lHK
dimMFcV52lwITObBSfsix6hj2dEWo6SORSIPjvlXX2coZUfk1AW94/FE/4O5
X498Z0fKjUHG89GELspXuSrEgX7szrK1CSJ0JsMZgxwOJPJh+hZ2lZinX6vs
nR0nyqfyeElSJrinMZLvMRc6bpBH/0yR4F8SURpZXKjx5bDTEXlinr4UwceV
XGhIU0/GTpLIi2E3dRvnQnzRMmV1Qjy4yAZNvZMqNwoSnPoURiL6T5TxGP3l
RqaKlrOszdy4CHu5KJUzL5oIidPOauTGcbMs7fQgXuTR86XwVB03jtUVSFon
86JoXxVP1ypunNQmF6L0lRfVod1bbW+I+qePys4p7EKyFzvYY2O58TQfE9XT
1HyIzlFTQcCSGx+6GWprXrkbdVgdMZk1I/J6Xr7l7t6NnpsK+VcbE3n3U3im
/+5Gxy7+bbDVI+qXL8XNi/MjsuJTszw1Qn/cpOYay48+U00GnpTixm0O3i86
4ymAIp+HtVmucOFD/hPB53WEkGmiG0WOwoVjZlJuTNeF0IEn5gLUC1w4qVNr
aSZCCFWHytpnzxD6wUAzvmYhNOfS829ukAvHZ+Evt9YepHdSQjiwngu3ORUj
1Hh+L+LpbXDJiCH0YP8EJZd9CD+cfj8kmmB3vqmR6H3I5a7/S3IEkSd6zav8
7T7UKKE4IBVK9Ivynu1c2Ydue6VdKPbhwkW+qnr+PSOCRrj9pOqtiXkrf7m8
7RJB77Tlp8ZluPC0b7VbBQyiyDqdhfazFMFDdJefCIki1uWJfXkHCfbRexkl
J4rIKakmrvuJ+dLVLjeaiCLBWeZP/3gJ/dEFarVcURR0fzyLYZMTt3Ff+xyg
J4b065LsJZs5cczr3NV3RQfQga6xn58aOXERbUYD76YD6N+YrDm5jhPHxbQ7
TEYOoGf0dXqZVYT/Fq+wJ684Gjo3e2pvISc+1HmuZddtcXS9/SQ/Vxyh344T
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
       "]]},
     Annotation[#, "Charting`Private`Tag$848010#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-0.0027641708107448426`, 1.3120191000242576`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7967937597070875`*^9, 
  3.797000803137298*^9},ExpressionUUID->"aa155d8a-65bd-4f8d-9ffc-\
f064856e1d0b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"period", "[", 
   RowBox[{"a_", ",", "k_", ",", "mu_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"a", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "k"}], ")"}], "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "+", 
        RowBox[{"k", "^", "2"}]}], "]"}]}]}], ")"}], "*", 
   RowBox[{"JacobiDN", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"mu", "/", "a"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"a", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "k"}], ")"}], "/", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "+", 
           RowBox[{"k", "^", "2"}]}], "]"}]}]}], ")"}], "*", "x"}], ",", 
     "k"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.796821345893372*^9, 3.79682134978931*^9}, {
  3.7968214165707483`*^9, 3.796821544522376*^9}, {3.7968215876770697`*^9, 
  3.796821587908886*^9}},ExpressionUUID->"1bdf1b35-39a7-4bfc-a2ac-\
9e78d827a29d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"period", "[", 
      RowBox[{"1", ",", "0.25", ",", "1", ",", "x"}], "]"}], ",", 
     RowBox[{"period", "[", 
      RowBox[{"1", ",", "0.5", ",", "1", ",", "x"}], "]"}], ",", 
     RowBox[{"period", "[", 
      RowBox[{"1", ",", "0.99999", ",", "1", ",", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7968215912041597`*^9, 3.796821628681977*^9}, {
  3.7969558877531414`*^9, 3.7969558993682337`*^9}, {3.7969559531379423`*^9, 
  3.79695596721037*^9}, {3.7969561578492956`*^9, 
  3.7969561963930454`*^9}},ExpressionUUID->"30aacd03-1ef2-4dd5-8aa4-\
1f338f872078"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
xDM3Kvh/vydH/v/vyf8PS4qZCQ==
          "]]}, Annotation[#, "Charting`Private`Tag$848099#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$848099#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtmnc01//3wO293u93haZEikikknFfUTRUkpEimQ1Sve0tK5usIsree/PB
62lnZFPIKkmJzLcZv/fvnO8/r9d5nOe9z3uf957Xvfd1zvOw0TMNUzoaGhp3
6uP/3y4/ry/u7JAQMfux9jN9Mkw57VkZ3iKhPsfb2vP3yXCDZ2y1bJ2EHl9w
3Hr1gAwCss//PVsiIdMZa+VNYzL4fjpHozZPQrPIb3rAlAwLhrT0x2ZJqNFO
X77lIRnq/MNYxqdI6OYKZX3BnAxih+6xV30nIU/TkUfHLMkQUXSE6+04CWnz
NITaPCeD6ddikvoQCfXYMfNq2pCBReLzQfSJhNRCa24LupPhRd2Hw7GtJJQ/
cn6cy5MMQ9qPhOybSUi5yAmIPmTIcls/LllLQtc5lb31A6n+d++TiS8moYTB
oVimGDKUmU6edS4goQfL6eKZcdTzbGSfv5NLQqRxlkKTBKr/gooYTzoJbb7+
l3Ywg+qf9YNr7u9I6KHK467UCjL8Yzl+Q+8tCXnM5HrR1ZDBLG5B/VwkCXHW
mmna1JHhbJOH9nwwCek9ltWLb6P6x5ti+MCDhHjndnI4xsignP3URN6NhEoP
p4wcniRDNnbmIZ8zCelfqtK58YsMLo+bLbpsSOjo2/GLs0tU//77ZYc9JqGr
rrlVymxW4Hez0HG/GQl992heI/FYweJ3R5c1IxJyIrqXbO62gnoODs98PRIa
q2PvIAhagdl9iWABdRIy8Qq4oStnBVm0Vsk0Z0nonlCnlx7ZCs7dzmSKliYh
viPyWSqOVtCUPPHolCQJtd36yXbdwwrGVdXFjY6T0HPm5OTcMCvYEyxeWr+P
hCp6jV43FVuBx97pZh8aEhIMyNXU3LYCHotDoof+EVGP+JOvzCzWEFetHVi2
TkTFbi1PvhCsofxBo/r0IhE9TXHr6xK2htnUxMErP4hI30TfWuCmNdyR1p/h
aCWiAsHvMpfTrGHKK+J6ShMR3WIWOtlbaA1WA215CvVEVBf68qhzjTUEO5y3
tqwiorZ7GrePDVhDPc77rzOXiJayd/vNMNmAhFoPV3g4Ef0JrSaJW9oAo6mq
FL8+EWn8DMOOaNpCz/1TOjO6RESfcEIpwMgW3t/Z51ytTUQdK3cCuF/Ywhm1
v42G6kSkVP5T4WmwLZhJv9HNVCYipnMnJNxabeEj7U93OVEi6sJCGLgu20Hg
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

          "]]}, 
        Annotation[#, "Charting`Private`Tag$848099#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-5, 5}, {0., 1.4142110908833674`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"period", "(", 
         RowBox[{"1", ",", "0.25`", ",", "1", ",", "x"}], ")"}], 
       RowBox[{"period", "(", 
         RowBox[{"1", ",", "0.5`", ",", "1", ",", "x"}], ")"}], 
       RowBox[{"period", "(", 
         RowBox[{"1", ",", "0.99999`", ",", "1", ",", "x"}], ")"}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.796821623729602*^9, 3.7968216311048203`*^9}, 
   3.7969559068295865`*^9, {3.7969559605907173`*^9, 3.796955972079278*^9}, {
   3.7969561784347525`*^9, 3.7969562010457172`*^9}, 
   3.797000805645673*^9},ExpressionUUID->"e9828b3d-700b-40c8-802c-\
2c2c82e48b16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "*", 
        RowBox[{"Sqrt", "[", "2", "]"}], "*", 
        RowBox[{"Sech", "[", 
         RowBox[{"1", "*", 
          RowBox[{"Sqrt", "[", "2", "]"}], "*", "x"}], "]"}]}], ",", 
       RowBox[{"period", "[", 
        RowBox[{"1", ",", "0.06", ",", "1", ",", "x"}], "]"}], ",", 
       RowBox[{"period", "[", 
        RowBox[{"1", ",", "0.999", ",", "1", ",", "x"}], "]"}], ",", 
       RowBox[{"period", "[", 
        RowBox[{"1", ",", "0.9999", ",", "1", ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "15"}], ",", "15"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7970050547343493`*^9, 3.797005154099182*^9}, {
   3.7970052160077953`*^9, 3.797005224199432*^9}, {3.7970053193100243`*^9, 
   3.7970053510322*^9}, {3.79706196265894*^9, 3.797062028441925*^9}, 
   3.7971366886182365`*^9, {3.7972486658768053`*^9, 
   3.7972487701177692`*^9}},ExpressionUUID->"b11c8cf9-ab48-4aef-99e3-\
7dd6ff54de40"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ozIf+L98fPRfPv7/AKpCx1Y=
          "]]}, Annotation[#, "Charting`Private`Tag$70219021#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
wGXTaMAH1P/3/2fg////zP8AuDnh2Q==
          "]]}, Annotation[#, "Charting`Private`Tag$70219021#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
wa/CI/XUpDCWwq+Xx1W9BjSv4gPuMYlgDmyfTtceXwMG6b86rRdFMP3bj6xF
JFfByfKF1yVbEUyluJ/surMCja858idvimBS13tTXvWtwKtVGYl/PiLY4yzH
c4dDVoAFXdiTTRLBqDdliyo2loHDOqvcd0kE005NS3wVsgSCYbaqR4NEMco8
4hOBkTno+8ofGBomiqFBrv7e6DmIGmrt/xMriinky/ivnJsDLrnjTxOzRDH6
3ie2WM0sMBEFm9i7RDE7f1+jjzkzsD3feXVORAyLKgq0svkwDWVcr/L1ZcWw
xtNy2etW0+CpcZI24aAYVvQ37TEDbhpIz3PSLXTFMAl/Causj1OwKBRMqnES
wxJ2HxozpEzCqKH+688FYhgfYpz41DEOca7bv/5WiGEsZ0Q9Xd6Pw+V3BQcv
1olhqSbD9DXXxqF/ROInS78Ylusux0y3PgadD3bFvXbFsKe0GRcHRMfArtPa
Oh0vjrXzldbQ4kbg5I1iGkt5cQznGJN/tnwYxDe5smlVxLFmC4qy2MvDMCzS
RHFNXRx7/3h8Qi3xF1jd1EjhNxLHNG63B1keG4ILFLwr/m7iGGOk9K+pyH7w
eWjEHHNPHPtZJaK0cKIfviw+lc54JL7f/0VD+tk+WB+au9TxXBzzr+l464z1
wbtS9F0kRhxTut6TlP7vJ3S73373FYljh4KM85YSumF7NiG7sVYcS00qKKey
7gb8td6GoSZx7LfxkThK3m64Z6qzQ9UjjnkdVWAufd0FPEoCDqaz4li1n0pe
4/PO//f+N3ZpTo92na8TzKeq1Wc4JbCegvFvZh/b4cnlrfP/+CQwXBy38J5d
O6R0qdxmE5bAfJk7++8otAO56n28qowE5uJwOkLtYRtExbkx+mpKYIkuE/7v
W1rgpwVu8P/08OXRVHfR+xUhIlJRSbn3c+/lftxUSAPt3ZtkLEmkVEKS0Fsk
pdCkiEyhUsRX95rJTJExZchYxldU5nm4N0n53d9a3/X981nn7GedZ69z9lnP
WufstTYKuEzdKcG5sAr+fjLmKtsroK5JkZDVmSqg6/isQCcF9Onn/QoXqgI3
tcl9dlcV8J1xc1qF6UdYI1WZnPFQAYOy6L/zFirBvOqyp0GWAp5Ju7s51b8C
Nu1/PiOcr4AjD4PtJXQrYOhdhUN5oQJysuZ5ZoIV4Jkta65VqYBDjte2hHuV
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
9w7LGl7gwqKCMuHSQhItL/bamvz/dzldtxeul5L4Jmyj87cOLuQqLh4fqSbx
wK6+WwFZXIgyKu57VU9iXGXhifRoLvhc9uo69ZnEdUevKS3344LZ2z+19V0k
xn6/7utlyQXeobnkrEkSbQ+ZbW+YnYEu1/w4Jx6JdO65jO1dM/D+qftz+m8S
+wslD/zin4+w77yHTwSV8YKZlHyC3wyoXZ12uCGjjMZ/chy1pGdA7nmGtbqc
MhJWLeTqmWkQLLl0fGyTMp5VJZ9eap6GJtEJPSumMla0CN6vCZ2Gy1Ejitpa
yjipYKYULj4Nryt6+8RslLFcfYdrweQkbF7Vah2ZqozP5T705W4fB/37czPd
mcpYfD9HLPLbGNjNyd2n5ysjtByei3w0BtHdZ5JelynjC9mbsjL9oyCZMjxd
2aqMneTqsZJnIzC5f+HuzBIWPsjwFbyzcggk8hVkdomwMFhK549z2SAwlbUT
vMRZKL9VAtpcB8F6pW+tqCwLLUZm1+1oG4DGrpVrFFgsPGz5NMUrvh+yrtI5
RuYsFEnRiAyz6YX6Id2doZYsnLLt/VyzoRdGTl6obj3DwjzVnYsSW38ATTt9
3MaRhe1LesyPG/+AcMldO67fYuEm1ZyTCQe+g3uC0Ud2EgttOPIVpmY98Fju
3xMj6Sy88LAkjFzfA+mBIaNbc1gY4uhin9zdDYNXWqQKi1k4X3RELNGpG47/
c+Z402cWXmmqZgpv/Apu2XdGZDtYqP2p9cG2zC4IUWR7nupmYbWmaylbtwuq
JIZjB4dYOKBw0dD66n/Qd0tcXWWChRXNGkmvJPn3FVel0pXL5/MYFGQmdYK8
vYlFwRwLcU3mtlGdTvjffpeY/7/9Lv8fS2oxMg==
          "]]}, Annotation[#, "Charting`Private`Tag$70219021#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, 
        Annotation[#, "Charting`Private`Tag$70219021#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-15, 15}, {0., 1.4142078526027468`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"sech", "(", 
           RowBox[{
             SqrtBox["2"], " ", "x"}], ")"}]}], 
       RowBox[{"period", "(", 
         RowBox[{"1", ",", "0.06`", ",", "1", ",", "x"}], ")"}], 
       RowBox[{"period", "(", 
         RowBox[{"1", ",", "0.999`", ",", "1", ",", "x"}], ")"}], 
       RowBox[{"period", "(", 
         RowBox[{"1", ",", "0.9999`", ",", "1", ",", "x"}], ")"}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7970051142326345`*^9, 3.7970051586361027`*^9}, {
   3.7970052197524767`*^9, 3.7970052275134163`*^9}, {3.797005325421253*^9, 
   3.797005354473115*^9}, {3.7970619706099043`*^9, 3.7970619988253155`*^9}, 
   3.7970620318264885`*^9, 3.7971366939750557`*^9, {3.7972486761948442`*^9, 
   3.797248776782134*^9}},ExpressionUUID->"38855bfb-bf0f-4a6b-a506-\
f875536cb6d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"leng", "[", 
   RowBox[{"a_", ",", "k_", ",", "mu_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"2", "*", "n", "*", 
   RowBox[{
    RowBox[{"EllipticK", "[", "k", "]"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"mu", "/", "a"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"a", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "k"}], ")"}], "/", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "+", 
           RowBox[{"k", "^", "2"}]}], "]"}]}]}], ")"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.796822699218012*^9, 3.796822778230484*^9}, {
  3.79682287065661*^9, 
  3.7968228740609226`*^9}},ExpressionUUID->"41de6a84-f533-46c5-8f58-\
ea84324706b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"leng", "[", 
   RowBox[{"1", ",", "2", ",", "1", ",", "1"}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.79682274722863*^9, 3.7968227832136087`*^9}, {
  3.7968228364219503`*^9, 
  3.796822836459736*^9}},ExpressionUUID->"56dbe6c3-60af-477e-8027-\
103eb1d5d3d2"],

Cell[BoxData[
 RowBox[{"1.9543663107713416`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.9543663107713416`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.796822758882889*^9, 3.796822785273057*^9}, 
   3.796822838651606*^9, 3.796822879284596*^9, 
   3.7970008060794287`*^9},ExpressionUUID->"a88af5ce-823c-4435-b823-\
052e37d5580f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"period", "[", 
   RowBox[{"1", ",", "2", ",", "1", ",", "1"}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.796822853072602*^9, 
  3.796822894169793*^9}},ExpressionUUID->"45144877-f752-45e9-a0cd-\
0636e6a2dbd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.04107031669921435`"}], "+", 
  RowBox[{"1.152409454853229`*^-16", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.796822894617728*^9, 
  3.7970008061027937`*^9},ExpressionUUID->"5f6afbe4-a78f-405d-8efd-\
4f691643d388"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"period", "[", 
   RowBox[{"1", ",", "2", ",", "1", ",", 
    RowBox[{"1", "+", 
     RowBox[{"3", "*", 
      RowBox[{"leng", "[", 
       RowBox[{"1", ",", "2", ",", "1", ",", "1"}], "]"}]}]}]}], "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.796822905829852*^9, 
  3.7968229243764086`*^9}},ExpressionUUID->"8b9d8543-c904-41aa-9b03-\
4f7cbdf477c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.04107031669921435`"}], "+", 
  RowBox[{"1.152409454853229`*^-16", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.796822914101528*^9, 3.796822926829174*^9}, 
   3.7970008061617775`*^9},ExpressionUUID->"4c5ab1d6-ac97-4005-9711-\
411f083f551c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EllipticK", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.796880127197116*^9, 
  3.796880166417761*^9}},ExpressionUUID->"73d76dda-1cd8-4bef-8a45-\
0cbbc9e33615"],

Cell[BoxData[
 FractionBox["\[Pi]", "2"]], "Output",
 CellChangeTimes->{{3.7968801363840246`*^9, 3.796880167066227*^9}, 
   3.7970008061925106`*^9},ExpressionUUID->"01359bfc-7206-4d89-8116-\
66b95ab4467b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"len1", "[", 
   RowBox[{"k_", ",", "n_", ",", "mu_"}], "]"}], ":=", 
  RowBox[{"4", "*", 
   RowBox[{"EllipticK", "[", "k", "]"}], "*", 
   RowBox[{"n", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"k", "^", "2"}]}], ")"}]}], "]"}], "*", "mu"}], 
     ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"len2", "[", 
   RowBox[{"a_", ",", " ", "k_", ",", "n_", ",", "mu_"}], "]"}], ":=", 
  RowBox[{"2", "*", 
   RowBox[{"EllipticK", "[", "k", "]"}], "*", 
   RowBox[{"n", "/", 
    RowBox[{"(", "    ", 
     RowBox[{"mu", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "k"}], ")"}], "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{"k", "^", "2"}]}], "]"}]}]}], ")"}], " "}]}]}]}], "Input",
 CellChangeTimes->{{3.7968807813954573`*^9, 3.7968808836383686`*^9}, {
  3.796881003678566*^9, 3.7968810053841105`*^9}, {3.7969953981198945`*^9, 
  3.796995409623885*^9}, {3.7969954682748203`*^9, 3.796995473621737*^9}, {
  3.796995504593829*^9, 3.796995546340397*^9}, {3.79699568457837*^9, 
  3.796995691209199*^9}, {3.7970011753581295`*^9, 3.7970011795149126`*^9}, {
  3.7970054329517775`*^9, 3.7970054363651123`*^9}, {3.7970054720700836`*^9, 
  3.79700548874762*^9}},ExpressionUUID->"6a9e6021-cc5b-4b20-9f30-\
8b3d163d15e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"len1", "[", 
      RowBox[{"k", ",", "1", ",", "1"}], "]"}], ",", 
     RowBox[{"len1", "[", 
      RowBox[{"k", ",", "2", ",", "1"}], "]"}], ",", 
     RowBox[{"len1", "[", 
      RowBox[{"k", ",", "3", ",", "1"}], "]"}], ",", 
     RowBox[{"len1", "[", 
      RowBox[{"k", ",", "4", ",", "1"}], "]"}], ",", 
     RowBox[{"len1", "[", 
      RowBox[{"k", ",", "5", ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.796880986221634*^9, 3.7968810602518444`*^9}, {
  3.7968831095751076`*^9, 
  3.7968831247739487`*^9}},ExpressionUUID->"91d65ea6-ccd2-421e-8f9b-\
a47dadfe0084"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
prM6dnpeJHxx+/D4+aAOzvLmel76kJCQ6VRcs0wXvQyvTiwPIqH/m6+9r4su
mo+LPOoOJkG9l+OYH6CL6hleIffOkJCegUm8OF3sXGYkYR1Bgt8/Nye3V+ii
RV+nSkwiCXUxS6fvqunhmqQtfKckEjyHxQ9abdTDn9uyc1iXSUit02tKsdfD
0sJA7r/XSPjLvdbeJV4PNSLkLCWySTAo+EPYKcnGBaOQlV13SWjZ1Z8qo8PG
98KP7dl5JExxnky57mDjRceSg9uKSFjvwewPTmbjsd+VNamlJLjI26QFVrDR
siZ89NNDEvITh1a9G2TjL509f0dWLeqjj+TZbNDH7oHHRg5PSdDOjbfLcNfH
h8m0BXotCWAgKjqcqI/HF76cr2sk4Vm0pIr4N320LnGyTW5avH+rN92WtRYZ
Xs9kPV6RcMilJeaE21rsbUu8KfaGhL+/fs263r0Wy6OmD73pIKGniOdQLcXB
ZGNX7TvvSFjqc+v7f7gc9PvSQPj3kMCd2f/+tRMHbbL0S037F/25YWEG4Rxk
HkgJkhkkgR6DEcwCDopKL2zhfyTBKKLG1vkDB/ufe4oXDy/2b6GYUE41wIp/
Xr0IGyMhwM/R1n+vAaawNyTaCUi4/17mtkmqAZ7gX7enkSScbM/RuTpigDuu
iCtNTJDw1rLtG8+Ci6wdxwaefSehkW0QJV/ORfElbzMvTpNwjq0w0mGzDj+U
GXu7zZHgRe6PG1Fej1Xed9Zy5kmI7AtK2h66Aa+or5j89YuElx9DRXpPmeP/
ADwTgDQ=
          "]]}, Annotation[#, "Charting`Private`Tag$883226#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVknk81fkXxoVBNZGURshcLllSXC7Xeo4tWykhakRulFFShmlEiSwh9JMk
FJU16VZoQYrEJGUplDU3WXLv95NkLRq/P87rvN5/POd5Xq/n0NgBO30EBQQE
0hfn/9vOZ6T16aiL6esWttyZ5zQUtlh3tF9GF5QK3UJ7FlknOz2rVMYSgnxx
gVlPQ/tXnfeuyDjDnO94wOgiu3pPP06R8YbcFg2hnf/SsHdzrEWiTBBIV10c
U3tJw5w122PiZaIgrK7v3bcWGkaIlW6Ik0mF54FZjdM9NHTbfY3zZTwX1rvu
bPoxQ8PlPyPcrddz4E7R76HX1yiisiM18iyhDO66npz7TVcRj782gPRvj+Bh
rMxCt6siri2T7Fuy5AnErp2M7QhVxPtci6Zm41poVpT3rMhTxFq/K7K7eXVQ
sOnu7PtWRZxUMZEo8W+AYs2qoep5RRScLV4pq9wIFo7Vsj5aSqj3c999p9tN
IFpPTLLYStgUpfu6Xr0Z7A/lnspPU0KF82OzRVQLnPh+28K1TQnHpvv72rXa
QKQpMY++go65nysbxZPewDruAt99Bx3F5QvI4OBbeCDK3D93kY7n/iw/kEPv
gE0MzRrjLjpOYfGgb3gnlDdKXxNVVcYgRl2Z9LN3sGH7aJNtkDL2365LaKV1
AS1tdnT5S2X87vc2U+1EN4R6kgv/o6ughpnowoHKHvAcSUihhamg9XXawbtr
++DSGhaL06+Cx+U9FQfc++FaW/aBTWYbcCPPZXnntg8Q73awEPI2oJTEF7G6
uQ9wJHypjdxaVRR+kslRyhqAUJvrI7kxqnhIt/L9UnsufP/1Vs7NX9Sw2Jad
Uz3FhYN/ul0Wi1PDybF1K4fSPkJkdZfL3FJ1LHeyFkq1HIR20yevDlxRx3Cb
6OyyoUGQleVavNikgbReu3c3oj/BhoxsafvnGmioH5UqwxiCYKO/RMMDN6L7
+ubZJW+GICEopuboek2cbEzkHo0YBqciC0bqJ01MF/YI2kkfgSrnMgmNkk0o
1Vd+XbBuBOLyktjp4Zvxl5MRzgbHRiFQ5YJTmpEWChR5cLirPoN5lsXRsUda
GJjBSVxV+xlUUtJ5eo7a+FjjrJjkkTFIzJxRXDajjZJ2gRsjxXnALZq37ihk
YE6NxHJDSR6svHc+YPktBmoZlIyOS/FAtirwkjmHgQ6qI/leMjwonCVf75cz
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
          "]]}, Annotation[#, "Charting`Private`Tag$883226#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
wlsFOilHltiS0swQNXDC/wHz04k5
          "]]}, Annotation[#, "Charting`Private`Tag$883226#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/aADjvNb9kZWkWCrXyeQM3PEfwGNUuIz
          "]]}, Annotation[#, "Charting`Private`Tag$883226#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
tVKMU7tC9p+fsa+rSk1bLcb/AFVk0+g=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$883226#5"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 4.442882960826138}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 4.442882960826138}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {4.442882960826138, 60.41451677873966}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"len1", "(", 
         RowBox[{"k", ",", "1", ",", "1"}], ")"}], 
       RowBox[{"len1", "(", 
         RowBox[{"k", ",", "2", ",", "1"}], ")"}], 
       RowBox[{"len1", "(", 
         RowBox[{"k", ",", "3", ",", "1"}], ")"}], 
       RowBox[{"len1", "(", 
         RowBox[{"k", ",", "4", ",", "1"}], ")"}], 
       RowBox[{"len1", "(", 
         RowBox[{"k", ",", "5", ",", "1"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.79688104012144*^9, 3.7968810710524716`*^9}, 
   3.7968831261778393`*^9, 
   3.7970008065015182`*^9},ExpressionUUID->"7052ea14-498b-43ae-bc0c-\
190b89e5081e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"len2", "[", 
      RowBox[{"1", ",", "k", ",", "1", ",", "1"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7969955627439137`*^9, 3.7969956383795033`*^9}, {
  3.796999859067427*^9, 3.796999870263669*^9}, {3.7970000690154543`*^9, 
  3.7970000904795437`*^9}, {3.797004530316902*^9, 3.797004532249441*^9}, {
  3.7970045826466837`*^9, 3.797004583465124*^9}, {3.797004714376841*^9, 
  3.797004718519148*^9}, {3.797060061120872*^9, 3.7970600780310993`*^9}, {
  3.7970602512982492`*^9, 3.7970602736627154`*^9}, {3.7970770477624187`*^9, 
  3.797077059454832*^9}},ExpressionUUID->"860c4535-3178-47db-b515-\
1dde0f2f300f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
nBKa
       "]]},
     Annotation[#, "Charting`Private`Tag$5043577#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.7345799532454116`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {2.7345799532454116`, 3.867542470619111}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7969955965257463`*^9, {3.796995640747177*^9, 3.796995657606496*^9}, 
   3.796995699168171*^9, {3.7969998626960297`*^9, 3.7969998727726173`*^9}, {
   3.7970000739424644`*^9, 3.79700009307288*^9}, 3.797000806785549*^9, 
   3.797004534363967*^9, 3.7970045853846426`*^9, 3.797004721527151*^9, 
   3.797005495398573*^9, 3.797060080823512*^9, {3.7970602553229094`*^9, 
   3.7970602746029663`*^9}, {3.797077049074964*^9, 
   3.797077060367778*^9}},ExpressionUUID->"0122d2c1-8a01-48e9-8db8-\
895b1655d830"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"len2", "[", 
    RowBox[{"1", ",", "0", ",", "2", ",", "1"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.797060013078101*^9, 
  3.7970600424606295`*^9}},ExpressionUUID->"c9e88118-7edc-4822-b236-\
b626afbc5ef3"],

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{{3.7970600311071873`*^9, 
  3.797060043643319*^9}},ExpressionUUID->"9f468f5e-01d1-42e8-a669-\
a0df4519c4d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"len2", "[", 
       RowBox[{"1", ",", "k", ",", "2", ",", "1"}], "]"}], "-", "3"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0.0"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"len2", "[", 
       RowBox[{"1", ",", "k", ",", "2", ",", "1"}], "]"}], "-", "3"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0.99"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7969975033497953`*^9, 3.7969975339305115`*^9}, {
   3.796999984943599*^9, 3.79699998654378*^9}, {3.797000030356267*^9, 
   3.797000053010213*^9}, 3.7970001307633514`*^9, {3.7970008494117603`*^9, 
   3.7970008714098344`*^9}, {3.797075520242756*^9, 3.7970755287560654`*^9}, {
   3.797075576041707*^9, 
   3.797075592581299*^9}},ExpressionUUID->"9727a1ad-2782-46b9-8d53-\
84bfb397e4f3"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot","lstol",
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"",2,437,256,26679544226941549481,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7970755959926414`*^9, 
  3.797075598279108*^9}},ExpressionUUID->"21f9ee2e-e331-41a4-83af-\
fd53a659a541"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k", "\[Rule]", "0.3878397678490833`"}], "}"}]], "Output",
 CellChangeTimes->{{3.797075531695901*^9, 3.797075538837145*^9}, {
  3.7970755803438215`*^9, 
  3.7970755983241143`*^9}},ExpressionUUID->"a790dd58-2330-4737-9bc3-\
733971c74bb8"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot","lstol",
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"",2,438,257,26679544226941549481,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7970755959926414`*^9, 
  3.797075598376028*^9}},ExpressionUUID->"83a02d7d-8347-4894-95ee-\
ab46efc7ed31"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k", "\[Rule]", "0.3878389815130563`"}], "}"}]], "Output",
 CellChangeTimes->{{3.797075531695901*^9, 3.797075538837145*^9}, {
  3.7970755803438215`*^9, 
  3.797075598381155*^9}},ExpressionUUID->"3c9f80b5-b39c-46d9-8101-\
a898b8e87fdb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"len2", "[", 
   RowBox[{"1", ",", "0.387841", ",", "2", ",", "1"}], "]"}], "//", "N"}]], \
"Input",
 CellChangeTimes->{{3.797000745980679*^9, 3.79700078566726*^9}, {
  3.7970008418046894`*^9, 3.7970008421541977`*^9}, {3.797002633642976*^9, 
  3.797002644472616*^9}, {3.797075628540962*^9, 
  3.797075636027751*^9}},ExpressionUUID->"d446a879-4542-460e-b3bd-\
024d20f04fa9"],

Cell[BoxData["5.469159883068594`"], "Output",
 CellChangeTimes->{{3.797000786123689*^9, 3.797000806936604*^9}, 
   3.797000844139882*^9, {3.797002638043298*^9, 3.797002646280727*^9}, 
   3.797075637948488*^9},ExpressionUUID->"bae837fa-aeff-4736-b2ef-\
353bc8e8e3b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"len2", "[", 
    RowBox[{"1", ",", "0.2", ",", "1", ",", "4"}], "]"}], ",", 
   RowBox[{"len2", "[", 
    RowBox[{"1", ",", "0.58", ",", "1", ",", "4"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7970001401108027`*^9, 
  3.79700023440666*^9}},ExpressionUUID->"53ec2153-2801-4293-b233-\
811f2217475a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11.283270819378883`", ",", "11.288252191962927`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.797000224597559*^9, 3.7970002362509127`*^9}, 
   3.7970008069627204`*^9},ExpressionUUID->"e38b26cb-9357-4985-9e83-\
8fde0edcfa52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"period", "[", 
        RowBox[{"1", ",", "0.2", ",", "1", ",", "x"}], "]"}], ",", 
       RowBox[{"period", "[", 
        RowBox[{"1", ",", "0.58", ",", "1", ",", "x"}], "]"}], ",", 
       RowBox[{"period", "[", 
        RowBox[{"1", ",", "0.4", ",", "1", ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "6"}], ",", "6"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.797000242170586*^9, 3.7970002427782197`*^9}, {
  3.797000275848169*^9, 3.7970003129031467`*^9}, {3.7970047942383575`*^9, 
  3.797004834190711*^9}},ExpressionUUID->"7e7bf4b6-cc9a-4a05-9dab-\
368ebf9493e3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$3192909#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ng7w7P/N0/kDkzH98Q==
          "]]}, Annotation[#, "Charting`Private`Tag$3192909#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
l4eC2Lfu8ZsNAD8q2llnY8SDfWyL6eiXMg8qEuksShzFbN+h0ZrmREVV1HjN
LOzrv2Q/NonYUZHT185QN+x3gYf9iRArKjJsk/Zeg/1P9J5MJXsnFfVCv9k2
zHd+P390DFCR7YLvirPYHzdqON7/tJWKdvn991EI+yXyX8g206Cins//yaZg
tq7Oul2riNfr5PCIOPbRHzzbr2mspqJY7+qdoZjP7hxMyJWloo/JZzf0YxZI
jIlkSlJReVtQgi723dQPSsFxwlTE8+KqTxTmDTJv/f/yUVHnlcaOesyVjl5e
3nMUJKgYWPHPp81yaG4/uBRUpHNcehn27c8/yw7bjlIQj1XymNb/+zoFFdSu
Vvrn6/O+U3v1+ihoWuOoxD9OqrxlWtJJQS/yKg/8+/lVC3rGq1spyMCzRO6f
vz/e/lX3ehMFKT76ZU/i8xnHhWkJEhTkeO6Y1D9/72hdoxr4jILO3jttHoH5
uHTjurFSCmoZyuTTwTx50G3FkUIKqs5k6X7H9xtzdwnzYxYF6X+4NxmEeelg
kfjOWxR0S8hORwTzA2UrwedXKShv6whfEl5PPR/Woko8BS1Nyz4ogPltecp0
ZjgFWUcJQi8cD+e5zWx6EAV52sw/f4PjFRZ94cfUaQoSKS27cBTHl/522edT
xyioefmblls4/jn0uo99jhQUjNbVNWKfb8zga6y3pCCNuFePp3E+2f3Iq92y
k4Lq1k1UL74gwfCGXRX3DSko6NCayFns88JPEgqS1fH5HZ+4v8H5mT6tlsWn
SEFZ5QE3snH+qhq2pfmv+vf92fTT2Of3vJKOP0TH1x/tevAz9vfv4s/CW5dQ
kPjgitWXcP777j8YZMRHQVf84KDcMxJc/3bHYwNXAPUuq4pRfkqC9evh8dsj
Asj4mtWFrDISVJz64SQ2IICqVzdeFsb11jOhsIfbIYBm5aRNqx+SQF70kSZR
gT/fUGBwBdez14Dil+QSAfTO/tt8CK73uprs6CP5AmjH3MNtR3A/cPK89pk3
VQDZ50scn72D/bY1IMrEXwC5+K92S8b9ZDT/jzrDUwBNWV/tk8L9Ri/0ZO/g
MQFExNgfSsD9qFfdQT1mvwAqWE08t4nH/e6qQc8rLQF05ZCZugXuZyfdKyJu
qwig6V5TkdPY9yuN1DeeXiuAPOS2Xw2+gOuTsypCVEoA1Y21c4LP4vy3EVDb
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
lxoCO6Um8z9jr5Dv//8XQFa56JkaIfM/6biNVQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3192909#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.8857556884084976}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.8857556884084976}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-6, 6}, {0.8857556884084976, 1.3667492684584586`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"period", "(", 
         RowBox[{"1", ",", "0.2`", ",", "1", ",", "x"}], ")"}], 
       RowBox[{"period", "(", 
         RowBox[{"1", ",", "0.58`", ",", "1", ",", "x"}], ")"}], 
       RowBox[{"period", "(", 
         RowBox[{"1", ",", "0.4`", ",", "1", ",", "x"}], ")"}]}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.797000316634467*^9, 3.797000808608884*^9, {3.79700481628024*^9, 
   3.7970048391573753`*^9}},ExpressionUUID->"1c7987a5-3939-4ac4-bf60-\
c731daef6c93"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.797000177634101*^9, 
  3.79700018447484*^9}},ExpressionUUID->"3bfb08e4-0d68-491d-9b2a-\
84252b8ebb50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rootsk", "[", 
   RowBox[{
    RowBox[{"L_", "?", "NumericQ"}], ",", 
    RowBox[{"a_", "?", "NumericQ"}], ",", " ", 
    RowBox[{"n_", "?", "NumericQ"}], " ", ",", 
    RowBox[{"mu_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"len2", "[", 
        RowBox[{"a", ",", "k", ",", "n", ",", "mu"}], "]"}], "\[Equal]", 
       "L"}], ",", 
      RowBox[{"0", "\[LessEqual]", "k", "\[LessEqual]", "1"}]}], "}"}], ",", 
    "k"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7971013368628254`*^9, 3.797101362356576*^9}, {
  3.797101439859609*^9, 3.7971014763823347`*^9}, {3.797101693768215*^9, 
  3.797101719066473*^9}},ExpressionUUID->"ff71fd9d-2cff-4309-ab4d-\
f3e467176b38"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.797000186690841*^9, 
  3.797000186974925*^9}},ExpressionUUID->"5dc0d7dd-7b9c-4cf8-883c-\
43ddcb838bba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"len1", "[", 
     RowBox[{"k", ",", "4", ",", "1"}], "]"}], "-", "20"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0.999"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.796988870278601*^9, 3.796988897684877*^9}, {
  3.7969889457598524`*^9, 3.7969889797979107`*^9}, {3.7969890408662715`*^9, 
  3.7969890558574667`*^9}},ExpressionUUID->"cb76b4b4-3a42-40dc-9032-\
7f634131812b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k", "\[Rule]", "0.27992267193130643`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.796988981200686*^9, {3.7969890436923933`*^9, 3.796989058196001*^9}, 
   3.7970008087799225`*^9},ExpressionUUID->"1be26277-faad-41f9-8faf-\
3a2e417f4f08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"len1", "[", 
   RowBox[{"0.279923", ",", "4", ",", "1"}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.7969890119875813`*^9, 3.796989021753482*^9}, {
  3.7969890768512716`*^9, 
  3.7969890811666*^9}},ExpressionUUID->"c4b97937-11fd-4025-a669-e90640418177"],

Cell[BoxData["20.000003887850163`"], "Output",
 CellChangeTimes->{3.7969890833563013`*^9, 
  3.797000808798851*^9},ExpressionUUID->"b6d026a7-347f-4fe3-89a8-\
e092e534b0be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"i", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7969891783916554`*^9, 3.7969891811980906`*^9}, {
  3.796989231559351*^9, 
  3.796989239539604*^9}},ExpressionUUID->"68d312e0-e7a6-405d-ab68-\
1b3d722577c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.7969892403585253`*^9, 
  3.797000808833188*^9},ExpressionUUID->"767a16d1-2a79-45e4-9bc7-\
797460995a07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"len1", "[", 
       RowBox[{"k", ",", "i", ",", "1"}], "]"}], "-", "30"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0.999"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7969892538688354`*^9, 
  3.796989339361312*^9}},ExpressionUUID->"bad46f70-e737-4427-89fc-\
2f72604ad76a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "0.9999951056646796`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "0.9913307346422614`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "0.9080173484989676`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "0.7372644753666663`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "0.5264109404939914`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.796989256710639*^9, 3.7969892612087865`*^9}, {
   3.7969893022519646`*^9, 3.796989339994994*^9}, 
   3.7970008088657007`*^9},ExpressionUUID->"9689ad25-5282-4f1a-bfb2-\
e5c734048caa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"len1", "[", 
        RowBox[{"k", ",", "i", ",", "1"}], "]"}], "-", "30"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0.999"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Floor", "[", 
       RowBox[{"8", "/", "3"}], "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7969893805817337`*^9, 3.7969893992931733`*^9}, {
  3.7969894610407877`*^9, 3.796989495874879*^9}, {3.796993459002717*^9, 
  3.7969934607934027`*^9}, {3.7969948495077624`*^9, 
  3.7969948500977297`*^9}},ExpressionUUID->"a44830eb-f705-41f9-8266-\
cd961f7cc4cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.9999951056646796`", "}"}], ",", 
   RowBox[{"{", "0.9913307346422614`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7969893905470886`*^9, 3.7969893998416405`*^9}, {
   3.7969894920248833`*^9, 3.796989496545411*^9}, 3.7969934616449347`*^9, 
   3.7969948513910775`*^9, 
   3.797000808889887*^9},ExpressionUUID->"a711ada7-8803-45b8-9692-\
3641ab2a530e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.796993256617099*^9, 
  3.796993257684055*^9}},ExpressionUUID->"7d9a25ac-17cb-474c-a054-\
37c26497ac95"],

Cell[BoxData[
 RowBox[{
  RowBox[{"period", "[", 
   RowBox[{"a_", ",", "k_", ",", "mu_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"a", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "k"}], ")"}], "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "+", 
        RowBox[{"k", "^", "2"}]}], "]"}]}]}], ")"}], "*", 
   RowBox[{"JacobiDN", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"mu", "/", "a"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"a", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "k"}], ")"}], "/", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "+", 
           RowBox[{"k", "^", "2"}]}], "]"}]}]}], ")"}], "*", "x"}], ",", 
     "k"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.796993350446271*^9},ExpressionUUID->"7a0543d9-76c4-4cd2-8322-\
6fc1806f92f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"period", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Values", "@", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"len1", "[", 
             RowBox[{"k", ",", "i", ",", "1"}], "]"}], "-", "30"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0.999"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Floor", "[", 
            RowBox[{"12", "/", "3"}], "]"}]}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", "1", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7969933764497366`*^9, 3.796993405664195*^9}, {
  3.7969934501539593`*^9, 3.796993467867035*^9}, {3.7969935244478045`*^9, 
  3.7969935248228006`*^9}},ExpressionUUID->"3def824a-704d-4d32-a5b7-\
01f424e92ab6"],

Cell[BoxData[
 RowBox[{"{", "8.006184861347753`", "}"}]], "Output",
 CellChangeTimes->{3.7969934718901787`*^9, 3.796993534796949*^9, 
  3.797000809378419*^9},ExpressionUUID->"3f177532-2272-472c-a922-\
a0d04a7fa4cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"period", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Values", "@", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"len1", "[", 
             RowBox[{"k", ",", "i", ",", "1"}], "]"}], "-", "30"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0.999"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Floor", "[", 
            RowBox[{"12", "/", "3"}], "]"}]}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", "1", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7969935101618705`*^9, 
  3.796993527183513*^9}},ExpressionUUID->"296eb6f9-be6a-41dc-9f93-\
8a0b05258b35"],

Cell[BoxData[
 RowBox[{"{", "17.387543462849507`", "}"}]], "Output",
 CellChangeTimes->{{3.796993512896859*^9, 3.796993537230792*^9}, 
   3.797000809809861*^9},ExpressionUUID->"96b0141e-034d-4b71-8e27-\
2e73d5e7dea8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"period", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Values", "@", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"len1", "[", 
             RowBox[{"k", ",", "i", ",", "1"}], "]"}], "-", "30"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0.999"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Floor", "[", 
            RowBox[{"12", "/", "3"}], "]"}]}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ",", "1", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7969935299629707`*^9, 
  3.796993547535017*^9}},ExpressionUUID->"373bd63c-bc99-490c-b3fe-\
6c9856b681a8"],

Cell[BoxData[
 RowBox[{"{", "25.612656818900764`", "}"}]], "Output",
 CellChangeTimes->{{3.79699354038627*^9, 3.7969935505580893`*^9}, 
   3.797000810420209*^9},ExpressionUUID->"9220624a-8f2f-4219-9e09-\
c63bfbdd4b54"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7969947836408963`*^9, 
  3.796994785293395*^9}},ExpressionUUID->"a33a0db7-2da9-4666-a923-\
c4cdad598523"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"period", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Values", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"len1", "[", 
            RowBox[{"k", ",", "i", ",", "1"}], "]"}], "-", "30"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0.999"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Floor", "[", 
           RowBox[{"12", "/", "3"}], "]"}]}], "}"}]}], "]"}]}], ",", "1", ",",
      "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7969948977668395`*^9, 
  3.796994898580959*^9}},ExpressionUUID->"b8dbfa92-1d0b-4e10-ae6e-\
7765f9b016b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "8.006184861347753`", "}"}], ",", 
   RowBox[{"{", "17.387543462849507`", "}"}], ",", 
   RowBox[{"{", "25.612656818900764`", "}"}], ",", 
   RowBox[{"{", "30.722912534602482`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7970008121170855`*^9},ExpressionUUID->"c35a51e5-3f22-4083-a30b-\
62f7a946ae93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "8.006184861347753`", "}"}], ",", 
    RowBox[{"{", "17.387543462849507`", "}"}], ",", 
    RowBox[{"{", "25.612656818900764`", "}"}], ",", 
    RowBox[{"{", "30.722912534602482`", "}"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"autoval1", "[", 
   RowBox[{"k_", ",", "mu_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "3"}], "*", 
   RowBox[{"mu", "^", "2"}], "*", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "k"}], ")"}], "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"k", "^", "2"}]}], ")"}]}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7969962236899295`*^9, 
  3.7969962375523987`*^9}},ExpressionUUID->"ed38864e-d909-42c4-9711-\
19a866defd8b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "8.006184861347753`", "}"}], ",", 
   RowBox[{"{", "17.387543462849507`", "}"}], ",", 
   RowBox[{"{", "25.612656818900764`", "}"}], ",", 
   RowBox[{"{", "30.722912534602482`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.79700081221615*^9, 
  3.797001928728217*^9},ExpressionUUID->"823a587b-a7fd-4226-95ec-\
e5b968d5ea27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"autoval1", "[", 
    RowBox[{"k", ",", "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.796996243410883*^9, 
  3.7969962440620203`*^9}},ExpressionUUID->"b8e1dc63-b627-40b8-92fe-\
d730291cada0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
NDL+QuYlrjXz1dc0pGZXVjCs/D8o9D+LLj+c
       "]]},
     Annotation[#, "Charting`Private`Tag$1716379#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -5.999999999999999},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-5.999999999999999, -3.000000122448979}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.796996244977677*^9, 3.7970008122997284`*^9, 
  3.797001931277269*^9},ExpressionUUID->"f0ea8728-0540-4f18-9344-\
77c20e9a3f00"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Theta", "[", 
    RowBox[{"L_", ",", "T_", ",", "mu_", ",", "a_", ",", "guess_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"period", "[", 
       RowBox[{"a", ",", 
        RowBox[{"Values", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"FindRoot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"len2", "[", 
               RowBox[{"a", ",", "k", ",", "i", ",", "1"}], "]"}], "-", "L"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "guess"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Floor", "[", 
              RowBox[{"L", "/", 
               RowBox[{"(", 
                RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
          "]"}]}], ",", "mu", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}], "-", 
    RowBox[{"T", "*", 
     RowBox[{"Log", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"T", "/", 
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"autoval1", "[", 
           RowBox[{
            RowBox[{"Values", "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"FindRoot", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"len2", "[", 
                   RowBox[{"a", ",", "k", ",", "i", ",", "1"}], "]"}], "-", 
                  "L"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "guess"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Floor", "[", 
                  RowBox[{"L", "/", 
                   RowBox[{"(", 
                    RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
              "]"}]}], ",", "mu"}], "]"}]}], ")"}]}], "]"}], "]"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kvalues", "[", 
   RowBox[{"L_", ",", "T_", ",", "mu_", ",", "a_", ",", "guess_"}], "]"}], ":=", 
  RowBox[{"Values", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"FindRoot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"len2", "[", 
         RowBox[{"a", ",", "k", ",", "i", ",", "1"}], "]"}], "-", "L"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "guess"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{"L", "/", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7969951237666016`*^9, 3.7969951942752905`*^9}, {
   3.7969953413530693`*^9, 3.79699536467895*^9}, {3.796995441881428*^9, 
   3.7969954566232257`*^9}, {3.79699572063648*^9, 3.796995745600382*^9}, {
   3.7969958308423004`*^9, 3.7969958325179996`*^9}, {3.796996265348051*^9, 
   3.7969962852497325`*^9}, 3.7969963318541617`*^9, 3.7969963712354965`*^9, 
   3.796996614842122*^9, {3.7970009327929254`*^9, 3.7970009522814436`*^9}, {
   3.7970011446698313`*^9, 3.7970011480617266`*^9}, {3.797001197067882*^9, 
   3.7970012235705905`*^9}, {3.7970012602954426`*^9, 
   3.7970012726802487`*^9}, {3.79700205598518*^9, 3.7970020569436703`*^9}, {
   3.7970021016686697`*^9, 3.797002101780942*^9}, {3.79700247461945*^9, 
   3.7970025016441946`*^9}},ExpressionUUID->"2080d182-7ca8-493d-830c-\
796f0c9049f4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Kvalues", "[", 
   RowBox[{"3.15", ",", "3", ",", "1", ",", "1", ",", "0.99"}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rootsk", "[", 
   RowBox[{"3", ",", "1", ",", "1", ",", "1"}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.797002470307864*^9, {3.7970025068446703`*^9, 3.7970025467410307`*^9}, {
   3.797002679308612*^9, 3.797002679939217*^9}, {3.7970765502355037`*^9, 
   3.797076560433648*^9}, {3.7970765936905856`*^9, 3.7970766562766967`*^9}, {
   3.797076710973274*^9, 3.797076725551136*^9}, {3.7970919268420553`*^9, 
   3.797091929122363*^9}, {3.7971015937952557`*^9, 3.7971016150559216`*^9}, {
   3.7971016534003134`*^9, 3.7971016537911425`*^9}, {3.7971017439617987`*^9, 
   3.7971017463835573`*^9}},ExpressionUUID->"0abc9d0d-caca-4593-97ae-\
d4b1c3e74ad7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0.7781550710169743`", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.797101609838056*^9, 3.7971016548843093`*^9}, 
   3.797101748288913*^9},ExpressionUUID->"3aa48f61-3ce1-4ec6-b527-\
5280f2fb9d4e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "0.0682733008710811`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "0.7108371278628101`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.797101609838056*^9, 3.7971016548843093`*^9}, 
   3.7971017484138803`*^9},ExpressionUUID->"0639938e-f08e-41e5-99f0-\
3fc0444928cf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Theta1", "[", 
   RowBox[{"L_", ",", "T_", ",", "mu_", ",", "a_", ",", "guess_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"period", "[", 
      RowBox[{"a", ",", 
       RowBox[{"Values", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"len2", "[", 
              RowBox[{"a", ",", "k", ",", "i", ",", "1"}], "]"}], "-", "L"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "guess"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Floor", "[", 
             RowBox[{"L", "/", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
         "]"}]}], ",", "mu", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}], "/", 
   "T"}]}]], "Input",
 CellChangeTimes->{{3.7969966596447124`*^9, 3.796996664039913*^9}, {
   3.796996699003666*^9, 3.7969967010640984`*^9}, 3.7969967591652365`*^9, {
   3.79700136559096*^9, 
   3.7970013941323996`*^9}},ExpressionUUID->"e62ce0f9-a9a0-4679-987d-\
d29c5bd789ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", " ", "=", " ", 
  RowBox[{"Theta1", "[", 
   RowBox[{"20", ",", "2", ",", "1", ",", "1", ",", "0.1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.796996666921328*^9, 3.7969966743478026`*^9}, {
  3.796996834432935*^9, 3.7969968354155054`*^9}, {3.7970013867537766`*^9, 
  3.7970013880232472`*^9}, {3.7970015911605225`*^9, 
  3.7970015917730355`*^9}},ExpressionUUID->"c1384821-4072-4659-82d2-\
4ab5c912b4d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1.5707963267948726`", "}"}], ",", 
   RowBox[{"{", "3.141592653589749`", "}"}], ",", 
   RowBox[{"{", "4.71238898039241`", "}"}], ",", 
   RowBox[{"{", "6.283185307179566`", "}"}], ",", 
   RowBox[{"{", "7.853981633974493`", "}"}], ",", 
   RowBox[{"{", "9.424777960769433`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.796996677467664*^9, 3.7969967080263376`*^9, 3.7969967702221804`*^9, 
   3.796996838323765*^9, 3.7970008162491817`*^9, {3.7970013898315463`*^9, 
   3.7970013990530863`*^9}, 3.797001471267314*^9, 
   3.7970015943157873`*^9},ExpressionUUID->"fb9fd3df-5a1c-4e6a-84a4-\
842e88e40ff5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"Theta", "[", 
    RowBox[{"30", ",", "200", ",", "1", ",", "1", ",", "0.1"}], "]"}], ",", 
   RowBox[{"Min", "[", 
    RowBox[{"Theta", "[", 
     RowBox[{"30", ",", "200", ",", "1", ",", "1", ",", "0.1"}], "]"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7969969889380803`*^9, 3.796997001413067*^9}, {
  3.7969970317806377`*^9, 3.7969970607865567`*^9}, {3.7970014341744533`*^9, 
  3.797001438677861*^9}, {3.7970016009701414`*^9, 3.797001649036634*^9}, {
  3.797001766576002*^9, 
  3.7970017893314285`*^9}},ExpressionUUID->"ebfff79f-7813-442e-b1c8-\
f80389264b50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.796997022735408*^9, 3.7969970651645217`*^9, 3.7970008199829645`*^9, {
   3.7970014337117777`*^9, 3.7970014422766037`*^9}, 3.7970014757483664`*^9, {
   3.797001608730892*^9, 3.7970016535298786`*^9}, {3.797001771219469*^9, 
   3.797001793382676*^9}, 3.797002073009611*^9, 
   3.7970021161195908`*^9},ExpressionUUID->"52155849-6d26-47ab-bc3c-\
170d85bbbb69"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7970015715492373`*^9, 3.797001579676471*^9}, 
   3.7970016158560157`*^9},ExpressionUUID->"0dba7978-a822-422c-8df2-\
6494b71bd2e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ThetaD", "[", 
   RowBox[{"L_", ",", "T_", ",", "mu_", ",", "a_", ",", "guess_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", "  ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"0.5", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"D", " ", "[", 
          RowBox[{
           RowBox[{"period", "[", 
            RowBox[{"a", ",", 
             RowBox[{"Values", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"FindRoot", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"len2", "[", 
                    RowBox[{"a", ",", "k", ",", "i", ",", "1"}], "]"}], "-", 
                   "L"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", "guess"}], "}"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Floor", "[", 
                   RowBox[{"L", "/", 
                    RowBox[{"(", 
                    RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
               "]"}]}], ",", "mu", ",", "x"}], "]"}], ",", "x"}], "]"}], 
         ")"}], "^", "2"}]}], "+", 
      RowBox[{"paper", "[", 
       RowBox[{"a", ",", "mu", ",", "x"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}], "-", 
   RowBox[{"T", "*", 
    RowBox[{"Log", "[", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"T", "/", 
       RowBox[{"(", 
        RowBox[{"-", 
         RowBox[{"autoval1", "[", 
          RowBox[{
           RowBox[{"Values", "@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"FindRoot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"len2", "[", 
                  RowBox[{"a", ",", "k", ",", "i", ",", "1"}], "]"}], "-", 
                 "L"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "guess"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Floor", "[", 
                 RowBox[{"L", "/", 
                  RowBox[{"(", 
                   RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
             "]"}]}], ",", "mu"}], "]"}]}], ")"}]}], "]"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7970028942192535`*^9, 3.7970029631265025`*^9}, 
   3.7970030623981695`*^9, {3.797003099725937*^9, 
   3.79700310313118*^9}},ExpressionUUID->"a0ac98b7-2508-4b0a-b465-\
2a878d70f2cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ThetaD", "[", 
  RowBox[{"20", ",", "1", ",", "1", ",", "1", ",", "0.9"}], "]"}]], "Input",
 CellChangeTimes->{
  3.79700310660011*^9, {3.797091560210749*^9, 
   3.797091596108611*^9}},ExpressionUUID->"dc7872c5-f24c-43de-be25-\
856deeb11be7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.781497817766345`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.5519143491872347`*^-29", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.667083254376711`", "\[VeryThinSpace]", "+", 
     RowBox[{"9.580447875758353`*^-24", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", "6.547252849287638`", "}"}], ",", 
   RowBox[{"{", "8.359205134977145`", "}"}], ",", 
   RowBox[{"{", "9.890369036353448`", "}"}], ",", 
   RowBox[{"{", "10.731564856653929`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7970029752193856`*^9, 3.7970030672151923`*^9, 3.797003109775066*^9, 
   3.7970764088184357`*^9, {3.7970915813620553`*^9, 
   3.797091610636498*^9}},ExpressionUUID->"d7481d21-197a-4b30-8a82-\
aa6c83d9bd25"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ThetaD", "[", 
   RowBox[{"L_", ",", "T_", ",", "mu_", ",", "a_", ",", "guess_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", "  ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"0.5", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"period", "[", 
            RowBox[{"a", ",", 
             RowBox[{"Values", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"FindRoot", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"len2", "[", 
                    RowBox[{"a", ",", "k", ",", "i", ",", "1"}], "]"}], "-", 
                   "L"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", "guess"}], "}"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Floor", "[", 
                   RowBox[{"L", "/", 
                    RowBox[{"(", 
                    RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
               "]"}]}], ",", "mu", ",", "x"}], "]"}], ",", "x"}], "]"}], 
         ")"}], "^", "2"}]}], "+", 
      RowBox[{"paper", "[", 
       RowBox[{"1", ",", "1", ",", 
        RowBox[{"period", "[", 
         RowBox[{"a", ",", 
          RowBox[{"Values", "@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"FindRoot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"len2", "[", 
                 RowBox[{"a", ",", "k", ",", "i", ",", "1"}], "]"}], "-", 
                "L"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "guess"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Floor", "[", 
                RowBox[{"L", "/", 
                 RowBox[{"(", 
                  RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
            "]"}]}], ",", "mu", ",", "x"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}], "-", 
   RowBox[{"T", "*", 
    RowBox[{"Log", "[", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"T", "/", 
       RowBox[{"(", 
        RowBox[{"-", 
         RowBox[{"autoval1", "[", 
          RowBox[{
           RowBox[{"Values", "@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"FindRoot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"len2", "[", 
                  RowBox[{"a", ",", "k", ",", "i", ",", "1"}], "]"}], "-", 
                 "L"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "guess"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Floor", "[", 
                 RowBox[{"L", "/", 
                  RowBox[{"(", 
                   RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
             "]"}]}], ",", "mu"}], "]"}]}], ")"}]}], "]"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7970034286030293`*^9, 3.797003438177601*^9}, {
  3.7970035025251913`*^9, 3.797003502792431*^9}, {3.7970035588525963`*^9, 
  3.79700362085305*^9}, {3.7970059718187804`*^9, 3.797005994691233*^9}, {
  3.7970060709651546`*^9, 3.797006071891875*^9}, {3.7970061482119365`*^9, 
  3.7970061495498657`*^9}},ExpressionUUID->"c5b3d477-846c-4f58-9c95-\
642206b0759c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ThetaD", "[", 
  RowBox[{"20", ",", "3", ",", "1", ",", "1", ",", "0.5"}], "]"}]], "Input",
 CellChangeTimes->{{3.797003441792203*^9, 3.7970034505276117`*^9}, {
   3.797003675337553*^9, 3.7970037161515913`*^9}, {3.7970042459435196`*^9, 
   3.79700425260592*^9}, {3.797005757547763*^9, 3.797005791674308*^9}, {
   3.797005831775509*^9, 3.797005832095048*^9}, {3.79700603435752*^9, 
   3.7970060545542364`*^9}, {3.7970060987378774`*^9, 3.7970061284526772`*^9}, 
   3.797076473104759*^9},ExpressionUUID->"780b1915-d0b3-4e6f-964d-\
a2d67059de09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.925338853992221`", "\[VeryThinSpace]", "-", 
     RowBox[{"5.356427176208889`*^-28", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.810924290569296`", "\[VeryThinSpace]", "+", 
     RowBox[{"3.398036765056291`*^-23", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.6910934689432535`", "\[VeryThinSpace]", "+", 
     RowBox[{"8.53313194578774`*^-20", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", "8.502997666292911`", "}"}], ",", 
   RowBox[{"{", "10.033279786546295`", "}"}], ",", 
   RowBox[{"{", "10.867449567077887`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.797003451416093*^9, 3.797003509023443*^9, 3.797003632137799*^9, {
   3.7970036852515364`*^9, 3.797003726041954*^9}, {3.7970042337856193`*^9, 
   3.7970042607039814`*^9}, {3.797005761985656*^9, 3.797005795098036*^9}, 
   3.797005835597867*^9, 3.797005978367812*^9, {3.79700600920018*^9, 
   3.797006103415223*^9}, {3.7970061376115513`*^9, 3.7970061619092846`*^9}, 
   3.7970764380587873`*^9, 
   3.7970764824983044`*^9},ExpressionUUID->"fb056a09-ca77-423c-8fe4-\
e824a5db177b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Kvalues", "[", 
  RowBox[{"20", ",", "3", ",", "1", ",", "1", ",", "0.2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7970038553430433`*^9, 3.797003880429104*^9}, {
   3.7970039995849066`*^9, 3.7970040066134176`*^9}, {3.797004282844718*^9, 
   3.7970043208739576`*^9}, {3.7970057380447817`*^9, 3.79700574682146*^9}, {
   3.797005940560901*^9, 3.797005945604377*^9}, {3.797006172520675*^9, 
   3.7970061797076797`*^9}, 
   3.797076501118909*^9},ExpressionUUID->"771bbaa3-6bc0-4c77-be26-\
cc939b5dd36d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "0.825739132847243`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.6688275869452335`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.5226520085463968`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.3807808882878705`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.23520543858308984`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.07133323494387568`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.797003868664222*^9, 3.7970038835115795`*^9}, {
   3.797004002479687*^9, 3.7970040076832433`*^9}, {3.797004288465931*^9, 
   3.797004324605367*^9}, {3.7970057424708385`*^9, 3.797005749186751*^9}, 
   3.797005950277708*^9, {3.7970061750483823`*^9, 3.797006181351139*^9}, 
   3.797076501804241*^9},ExpressionUUID->"3c6d725e-aa63-4769-939d-\
afeebef034dd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"energies", "[", 
   RowBox[{"L_", ",", "T_", ",", "mu_", ",", "a_", ",", "guess_"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"NIntegrate", "[", "  ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"0.5", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"period", "[", 
           RowBox[{"a", ",", 
            RowBox[{"Values", "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"FindRoot", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"len2", "[", 
                   RowBox[{"a", ",", "k", ",", "i", ",", "1"}], "]"}], "-", 
                  "L"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "guess"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Floor", "[", 
                  RowBox[{"L", "/", 
                   RowBox[{"(", 
                    RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
              "]"}]}], ",", "mu", ",", "x"}], "]"}], ",", "x"}], "]"}], ")"}],
        "^", "2"}]}], "+", 
     RowBox[{"paper", "[", 
      RowBox[{"1", ",", "1", ",", 
       RowBox[{"period", "[", 
        RowBox[{"a", ",", 
         RowBox[{"Values", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"FindRoot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"len2", "[", 
                RowBox[{"a", ",", "k", ",", "i", ",", "1"}], "]"}], "-", 
               "L"}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "guess"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Floor", "[", 
               RowBox[{"L", "/", 
                RowBox[{"(", 
                 RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
           "]"}]}], ",", "mu", ",", "x"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7970040137557354`*^9, 
  3.797004078627485*^9}},ExpressionUUID->"94c217a0-8fbb-496a-8677-\
97cf939ce15e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"energies", "[", 
  RowBox[{"20", ",", "40", ",", "1", ",", "1", ",", "0.99"}], "]"}]], "Input",
 CellChangeTimes->{{3.797004083028004*^9, 3.797004098142134*^9}, {
  3.7970056746350245`*^9, 
  3.7970056753795967`*^9}},ExpressionUUID->"ddb63891-57fe-441b-b074-\
a8b00da6f30d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1.8856180831522797`", "}"}], ",", 
   RowBox[{"{", "3.7712035197793368`", "}"}], ",", 
   RowBox[{"{", "5.651373322958751`", "}"}], ",", 
   RowBox[{"{", "7.463349652818188`", "}"}], ",", 
   RowBox[{"{", "8.994954444755948`", "}"}], ",", 
   RowBox[{"{", "9.839663284940873`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7970040995388584`*^9, 
  3.7970056842251263`*^9},ExpressionUUID->"ce9eea7b-c235-41c6-986a-\
ebb4152a6940"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"energies", "[", 
  RowBox[{"20", ",", "4000", ",", "1", ",", "1", ",", "0.05"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7970057152088575`*^9, 3.7970057174718614`*^9}, {
  3.7970058989574203`*^9, 
  3.797005906730682*^9}},ExpressionUUID->"c9478849-9864-47cb-99c2-\
c2ea8cb3fbe9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.49281230419949085`", "}"}], ",", 
   RowBox[{"{", "1.891019118266533`", "}"}], ",", 
   RowBox[{"{", "3.967182487882869`", "}"}], ",", 
   RowBox[{"{", "6.352611304500814`", "}"}], ",", 
   RowBox[{"{", "8.538527778419157`", "}"}], ",", 
   RowBox[{"{", "9.87544551802716`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.797005720781754*^9, {3.7970059038022327`*^9, 
   3.79700591023534*^9}},ExpressionUUID->"9baf982f-83d6-4fe6-9ac6-\
00a06d0b0c38"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ThetaDIMPRO", "[", 
   RowBox[{"L_", ",", "T_", ",", "mu_", ",", "a_", ",", "guess_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", "  ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"0.5", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"period", "[", 
            RowBox[{"a", ",", 
             RowBox[{"Values", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"rootsk", "[", 
                 RowBox[{"L", ",", "1", ",", "i", ",", "1"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Floor", "[", 
                   RowBox[{"L", "/", 
                    RowBox[{"(", 
                    RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
               "]"}]}], ",", "mu", ",", "x"}], "]"}], ",", "x"}], "]"}], 
         ")"}], "^", "2"}]}], "+", 
      RowBox[{"paper", "[", 
       RowBox[{"1", ",", "1", ",", 
        RowBox[{"period", "[", 
         RowBox[{"a", ",", 
          RowBox[{"Values", "@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"FindRoot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"len2", "[", 
                 RowBox[{"a", ",", "k", ",", "i", ",", "1"}], "]"}], "-", 
                "L"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "guess"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Floor", "[", 
                RowBox[{"L", "/", 
                 RowBox[{"(", 
                  RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
            "]"}]}], ",", "mu", ",", "x"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}], "-", 
   RowBox[{"T", "*", 
    RowBox[{"Log", "[", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"T", "/", 
       RowBox[{"(", 
        RowBox[{"-", 
         RowBox[{"autoval1", "[", 
          RowBox[{
           RowBox[{"Values", "@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"rootsk", "[", 
               RowBox[{"L", ",", "1", ",", "i", ",", "1"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Floor", "[", 
                 RowBox[{"L", "/", 
                  RowBox[{"(", 
                   RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
             "]"}]}], ",", "mu"}], "]"}]}], ")"}]}], "]"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7971017625828176`*^9, 3.797101807228305*^9}, {
  3.797101939462661*^9, 
  3.797101942587256*^9}},ExpressionUUID->"0c8f833e-132b-4de4-b855-\
72393c135e44"],

Cell[BoxData[
 RowBox[{
  RowBox[{"KvaluesIMPRO", "[", 
   RowBox[{"L_", ",", "T_", ",", "mu_", ",", "a_", ",", "guess_"}], "]"}], ":=", 
  RowBox[{"Values", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"rootsk", "[", 
      RowBox[{"L", ",", "1", ",", "i", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{"L", "/", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7971018127582703`*^9, 3.797101852522073*^9}, {
  3.797101888576069*^9, 
  3.797101907243338*^9}},ExpressionUUID->"42ac2587-6847-4b75-934e-\
a9d5e96b2a99"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KvaluesIMPRO", "[", 
  RowBox[{"20", ",", "3", ",", "1", ",", "1", ",", "0.2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7971019111018105`*^9, 
  3.797101926318877*^9}},ExpressionUUID->"5dddf8aa-759d-4db0-b80d-\
483b9f4f88c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "0.9999999999916743`", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "0.9999884579291678`", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "0.9987099873565204`", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "0.9861670789709097`", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "0.9407909595077986`", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "0.8359134781497984`", "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.797101927481118*^9},ExpressionUUID->"a2a0f887-ab0a-49f2-bde5-\
7e35f1169c85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ThetaDIMPRO", "[", 
  RowBox[{"20", ",", "30000", ",", "1", ",", "1", ",", "0.5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.797101947648288*^9, 3.797101951678879*^9}, {
  3.797101983202767*^9, 
  3.7971020411786337`*^9}},ExpressionUUID->"f37a22c4-ca4b-4b04-aed0-\
4ea809244e22"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"-", "127756.01225316043`"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"-", "127754.12666822337`"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"-", "127752.25274647474`"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"-", "127751.16209524262`"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"-", "127762.85720729457`"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"-", "127867.40309498759`"}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.797101996902401*^9, 
  3.797102051597703*^9}},ExpressionUUID->"d8f080a3-0f02-44c8-997c-\
cefba6a5f43d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KvaluesIMPRO", "[", 
  RowBox[{"20", ",", "30000", ",", "1", ",", "1", ",", "0.5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7971020654541316`*^9, 
  3.7971020794349194`*^9}},ExpressionUUID->"63b3680f-b32a-408e-a8d1-\
247f1eb1beaa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "0.9999999999916743`", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "0.9999884579291678`", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "0.9987099873565204`", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "0.9861670789709097`", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "0.9407909595077986`", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "0.8359134781497984`", "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7971020806846247`*^9},ExpressionUUID->"e6918d28-7590-4481-b8d6-\
72410803fa71"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"energiesIMPRO", "[", 
   RowBox[{"L_", ",", "T_", ",", "mu_", ",", "a_", ",", "guess_"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"NIntegrate", "[", "  ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"0.5", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"period", "[", 
           RowBox[{"a", ",", 
            RowBox[{"Values", "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"rootsk", "[", 
                RowBox[{"L", ",", "1", ",", "i", ",", "1"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Floor", "[", 
                  RowBox[{"L", "/", 
                   RowBox[{"(", 
                    RowBox[{"\[Pi]", "/", "mu"}], ")"}]}], "]"}]}], "}"}]}], 
              "]"}]}], ",", "mu", ",", "x"}], "]"}], ",", "x"}], "]"}], ")"}],
        "^", "2"}]}], "+", 
     RowBox[{"paper", "[", 
      RowBox[{"1", ",", "1", ",", 
       RowBox[{"period", "[", 
        RowBox[{"a", ",", 
         RowBox[{"Values", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"rootsk", "[", 
             RowBox[{"L", ",", "1", ",", "i", ",", "1"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ",", "mu", 
         ",", "x"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7971360879110126`*^9, 
  3.7971361323134117`*^9}},ExpressionUUID->"f5988a43-8bf7-4616-b99d-\
1997f4c3f30e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"energyconfig", "[", 
   RowBox[{"L_", ",", "mu_", ",", "a_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", "  ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"0.5", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"period", "[", 
           RowBox[{"a", ",", "k", ",", "mu", ",", "x"}], "]"}], ",", "x"}], 
         "]"}], ")"}], "^", "2"}]}], "+", 
     RowBox[{"paper", "[", 
      RowBox[{"a", ",", "mu", ",", 
       RowBox[{"period", "[", 
        RowBox[{"a", ",", "k", ",", "mu", ",", "x"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.797136114457034*^9, 3.7971361180659914`*^9}, {
   3.7971362580275407`*^9, 3.7971363132758584`*^9}, 3.7971363507697754`*^9, {
   3.7971364401359787`*^9, 
   3.79713644334307*^9}},ExpressionUUID->"5b444c91-fc89-4da8-992a-\
c46f4c1de6bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"energyconfig", "[", 
   RowBox[{"10", ",", "1", ",", "1", ",", "0.0"}], "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.797136316688202*^9, 3.797136367149397*^9}, {
   3.7971364909812036`*^9, 3.797136491242518*^9}, 3.7971367669834766`*^9, {
   3.7971369947505927`*^9, 3.797136995104369*^9}, 3.797137060462463*^9, {
   3.7971370983658285`*^9, 
   3.797137098499935*^9}},ExpressionUUID->"dee4a9b0-98f8-4651-8d00-\
63da38d4aefe"],

Cell[BoxData["5.000000000000005`"], "Output",
 CellChangeTimes->{{3.797136327842073*^9, 3.79713636910253*^9}, {
   3.7971364766437707`*^9, 3.797136493207938*^9}, 3.7971367690577526`*^9, 
   3.797136997069174*^9, 3.7971370628299847`*^9, 
   3.7971371041997538`*^9},ExpressionUUID->"a0623bb7-d0b0-4b0e-b5f9-\
31b7e6586645"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"energyconfig", "[", 
   RowBox[{"10", ",", "1", ",", "1", ",", "1"}], "]"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.797136792335863*^9, 3.797136811118928*^9}, {
  3.7971370007944894`*^9, 3.7971370009268327`*^9}, {3.797137065294899*^9, 
  3.797137101819966*^9}},ExpressionUUID->"6360a33d-7c53-4678-acc1-\
5b6348649d4d"],

Cell[BoxData["0.9428090415791014`"], "Output",
 CellChangeTimes->{{3.7971368053297215`*^9, 3.797136811634125*^9}, 
   3.7971370029600115`*^9, {3.7971370671179404`*^9, 3.7971370734356155`*^9}, 
   3.7971371061618223`*^9},ExpressionUUID->"61a88967-4630-4f0e-8351-\
538bcc7d4c26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"period", "[", 
  RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7971365227966623`*^9, 3.797136532598801*^9}, {
  3.7971367325557013`*^9, 3.7971367328128085`*^9}, {3.7971369749289913`*^9, 
  3.797136975058289*^9}},ExpressionUUID->"2b69b7c2-89d2-4edb-8693-\
4f55272c4e6b"],

Cell[BoxData[
 SqrtBox["2"]], "Output",
 CellChangeTimes->{3.797136533697154*^9, 3.797136734793657*^9, 
  3.7971369759308243`*^9},ExpressionUUID->"227b7629-1444-4aea-83c9-\
5b15fa53c862"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"paper", "[", 
  RowBox[{"1", ",", "1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7971365583454375`*^9, 
  3.7971365693866773`*^9}},ExpressionUUID->"51fe99f1-ddac-46aa-87fb-\
b96dbb7e9c11"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{{3.79713656699823*^9, 
  3.797136570020563*^9}},ExpressionUUID->"ad493cd9-cb7c-4afb-ab13-\
107716dafc0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", 
   RowBox[{"Sqrt", "[", "2", "]"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.7971368190840445`*^9, 
  3.797136839339267*^9}},ExpressionUUID->"4c9e04f6-df0f-411e-8e21-\
f8b9be44be4d"],

Cell[BoxData["0.7071067811865475`"], "Output",
 CellChangeTimes->{
  3.797136840430846*^9},ExpressionUUID->"95534789-ee64-4aee-b655-\
0b0d278dd5b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"energyconfig", "[", 
    RowBox[{"20", ",", "1", ",", "1", ",", "k"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotPoints", "\[Rule]", "20"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.797137222649451*^9, 3.797137251400473*^9}, {
   3.7971388667888336`*^9, 3.7971388677661266`*^9}, {3.797139642247096*^9, 
   3.79713967027585*^9}, 3.7971398472281346`*^9, {3.797141104027705*^9, 
   3.7971411107001686`*^9}, 
   3.797141199533529*^9},ExpressionUUID->"9d00dfd6-780a-4f71-bc5c-\
9cef1796bdcf"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$55258061#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 7.54248843672805},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {7.54248843672805, 9.999999999999943}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7971376747448845`*^9, 3.797139457542835*^9, 
  3.797139659793663*^9, 3.7971397272877855`*^9, 3.797141027744995*^9, 
  3.7971411974200735`*^9, 3.7971413739349756`*^9, 
  3.797149771836228*^9},ExpressionUUID->"6a3e8c38-667a-423a-8fdc-\
7d131d2ee11b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"energyconfig", "[", 
  RowBox[{"20", ",", "1", ",", "1", ",", "0.92"}], "]"}]], "Input",
 CellChangeTimes->{{3.797141086212352*^9, 3.797141096899494*^9}, 
   3.797141376413929*^9},ExpressionUUID->"48bb9e5a-537d-4dee-b62f-\
2810ff6397a9"],

Cell[BoxData["9.45301955918081`"], "Output",
 CellChangeTimes->{3.797141099199765*^9, 
  3.797141380126676*^9},ExpressionUUID->"80167368-ea3e-4476-bc2e-\
ae4f611f2432"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"energyconfig", "[", 
     RowBox[{"20", ",", "1", ",", "1", ",", 
      RowBox[{"0.05", "*", "i"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "20"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7971413868044257`*^9, 3.7971413911080785`*^9}, {
  3.7971414451701317`*^9, 3.7971414764973164`*^9}, {3.7971415828642817`*^9, 
  3.797141584440059*^9}},ExpressionUUID->"139ff315-c108-42c0-a00b-\
0feaf62c5364"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9.948478239139497`", ",", "9.815348160572018`", ",", "9.6250464257955`", 
   ",", "9.402564118750936`", ",", "9.190929067844928`", ",", 
   "9.024117600797103`", ",", "8.916530460040036`", ",", "8.872742226502648`",
    ",", "8.8906011086837`", ",", "8.96108141539989`", ",", 
   "9.080604790502209`", ",", "9.299710594771573`", ",", "9.61264865682398`", 
   ",", "9.709587862743394`", ",", "9.826578968851063`", ",", 
   "9.861395252943352`", ",", "9.898645643281995`", ",", "9.54107096470415`", 
   ",", "8.79886622969045`", ",", "0.9428090415820316`"}], "}"}]], "Output",
 CellChangeTimes->{3.7971414673064885`*^9, 3.7971415021405993`*^9, 
  3.7971416087152305`*^9},ExpressionUUID->"2814addb-98ed-41ed-a977-\
7aec8f889319"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.797141567704028*^9, 3.797141572310674*^9}, {
  3.797141816304253*^9, 3.797141818493493*^9}, {3.7971490635060453`*^9, 
  3.797149071988988*^9}},ExpressionUUID->"a171b6bf-07c4-4426-a55f-\
414c493761f4"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7I+oTPkw76myA1TAIYs1M6B0IYzP4fCt+5Qo
mwOML+AgrRH5SOacEpQv4nC3PqfkYCKML+HwOSZVJZIHxpdxuBD4v8r5qiKU
r+DQF7pR8MY+GF/J4ZZ6+L0/x2F8FQfD+//vCL2B8dUcHM2/sbtqwszTcGCe
d3RV8UwYX8th4b+NomstYe7TcdCy2yDpnw3j6zms6z0bbbocxjdwaF9ScIZj
J4xv6DBDV9FD+gyMb+SQVPDEgV0Uxjd2KDoz5R/LTEWHijNFRw5pGTtYyHm7
BHySdQAAYX9PSw==
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 7.363542122397314},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 20.}, {7.486634318432657, 9.948478239139497}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7971415735706987`*^9, {3.7971417930038853`*^9, 3.7971418205125103`*^9}, {
   3.7971490670870104`*^9, 
   3.797149072993023*^9}},ExpressionUUID->"e56c9fda-19ac-4358-82a1-\
266038981799"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", "f", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"period", "[", 
        RowBox[{"1", ",", "0.25", ",", "1", ",", "x"}], "]"}], ",", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"period", "[", 
           RowBox[{"1", ",", "0.25", ",", "1", ",", "z"}], "]"}], ",", "z"}], 
         "]"}], "/.", 
        RowBox[{"z", "\[Rule]", "x"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7971442531700087`*^9, 3.7971442647449903`*^9}, {
  3.797144628225359*^9, 3.7971446370880547`*^9}, {3.7971490849834385`*^9, 
  3.797149089900388*^9}},ExpressionUUID->"a7193119-1e13-4c30-aef2-\
325ca8871f33"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7I+oTPkw76myA1TAIYs1M6B0IYzP4fCt+5Qo
mwOML+AgrRH5SOacEpQv4nC3PqfkYCKML+HwOSZVJZIHxpdxuBD4v8r5qiKU
r+DQF7pR8MY+GF/J4ZZ6+L0/x2F8FQfD+//vCL2B8dUcHM2/sbtqwszTcGCe
d3RV8UwYX8th4b+NomstYe7TcdCy2yDpnw3j6zms6z0bbbocxjdwaF9ScIZj
J4xv6DBDV9FD+gyMb+SQVPDEgV0Uxjd2KDoz5R/LTJh7TBw8fv67W6v9zh4A
QKtOUw==
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 7.363542122397314},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 20.}, {7.486634318432657, 9.948478239139497}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.797144268654143*^9, 3.7971446413006687`*^9, 
  3.797149090973386*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztW89rHFUcf9nZTdNkV8SCeogSSKkXI4JST40nm1Sb9KYeTCEUpxuhrdQe
0kt1TlXwH1AYqgcP9qCCuIIipnhQetkGL1I9NIgs2IMoqKCFcd/3vdl9b+b7
vt83k202iYHs7O583+f74/N9M9/3fTtZWL7QfPnM8oWVU8tTc+eXX22unHpt
6ui5891TwYgQI00hxM9TQn5Ouh/1Ien+JSvyIM/wn0/DW1W041CEoXpFrc5x
OB10jx3RimLR7n6r5IZGotVJjnkNBa1zeqh5ugLHUSkGaUZ7VbkZwtuoSNpx
b6R8dVqRiNvJc/Bl3PIBhnSHh1FLdOzP86k2ZHhXe0W7qZXDt2esKEM4HxhO
IVaUWLySIg3Xn3X4Ky32w2uLOATZPEJxDVE7p9UCh3HbYglRG+S5DUPbGYJb
kx1DNk+lIq9dzZ79SqxddmgWlr81FUnUjUzPJAlXxNYVrNX2JfgonJhwwjBT
ipexnrc+JKcphKktFlKrQE1o0eOYUzrFYzimr/tYyoNBa3p1AbXklD2tGTav
U3096rADM0T+zpAdiqu2shAZ8tTR/O1BVP1vdebnB5VriVSVcgPHRSW/T74l
Uvy8PIy4UQ3k3D0DHjcs7E60UTNSBZLt5Nx2J2+rE5QRnRjwOcKUebHfbfk+
JRdJpyUifTOu9ByUlcW+v6klUWAtdCq+Ngx9KnznoilgVI5ple1Y3Wrlt/Sc
qRJcq0k1MOa4jTYrUNVwCFkLcA7tRxwKLB7tCl311Af1JlacBeY5XadHGT1a
DmHYy1osh3jt42Lfkjkc9JK4lVaHLd+dUe/OqHZd1OreIeukvebt9z/5+pBr
jzn1o3RzwnSwftp7XYYscrZ2yniubqhCVu03OMqVqqEL6Q39PK0p78xAe2WC
4YgngeSwNMUpHZm81/DT3HT4f15je1HvRb2zo1b3mPzOCFUlynQRBcpFiYaC
KRe9FobtLZgaUbK94GtEuTbDq0AU6zjIqrDXYGwz+c6J+kk1r1Y//eanry+/
/93lq1/9cO+ff/9zPwN7Qs27+fUff01ORp+lL6lGmNg+ERrxxkdrN03E529/
cF14Wnt8o/O7iX3x2+9/YbEqwGDq9m9/Se+kDvFAedJex/m67kZcIqiq49q+
YLWhNE4QlgiV53AnJgjSJwgvTEtg6CxLgJ2dOmGYCOMs4dMkYuZLVhXqwU2O
SNvKYzi5H7q1XCHo4mFo+BqmakjDKhaeXSda8q4QNGmTViXs/SollxegtkSr
9B5C8lVlbFyJrLVMRVtgO9KX8ETdzsSRXY7FsHIx+17PXnWJSHPGqO27yk3G
qGcXu0RMEsQo8jtiiYwtEdPEMlrL0SvDKtD4nkTmxgk8r++4r6SPiczwMJRb
HoayY8IA9QkS4Ltu3cNeYSzi3P/rRiwQ3JswQC0QjPM2UMYJ2CLC/Z3hcXsN
5/ZNN2KN4NaEAWqN4Ja3gXJLwK4h3L41PG5ncW5BWHfDjhAE57AAPUKw7GkN
pZrDziJ8g6QxGFLVSmPcd6WxmY0Lj5VFiY0LbCmhW3SP3QrP1cKmdi2YZUHB
jYuD+Iw/lLfoXBN47mdMExeJZY5aDRTc8JgmLrNDzIyeJi4zDnsQucwecWPW
8SSsZu8aM/g4qnFYdVt9lIBRTQWvEoVRTQOvEoVhLcFFt6oZ183v4cHc/DD5
Bp6yZja1t4hkNN3qbxGE8zCUVAK2gRDo+ZTd3ZA/hHMLwpkswZMEwY7r7wW3
6UmC9xuEJV4lmpMbhDnHVtIcx5udxnXCOrW9RJj5AzFTJwIhVMGxQrjYwEk4
zKgMEBcbRLSmvv4O5wEiKM6DA0RQBNaRdBBWkaCecquisgsjZlmsexnLY93L
WI1NH9HP/9NBI7dZpXQX39DCdiNB8rTpg/c/HWzyQQCXNeanukLPXlA2nBtZ
pZ/JKP6Yfok9rpzBpMjj9gPJmdez8sN8oIOibOQ/O6eOeQ==\
\>"],ExpressionUUID->"d99f25ed-4785-42c6-8cf5-364aa71c1062"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
S9NEpDsV/O/3yZH/+z75/wD/0p0D
          "]]}, Annotation[#, "Charting`Private`Tag$55218783#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$55218783#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-5, 5}, {-0.18382352692255494`, 1.212677735605628}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"period", "(", 
         RowBox[{"1", ",", "0.25`", ",", "1", ",", "x"}], ")"}], 
       RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
            RowBox[{"period", "(", 
              RowBox[{"1", ",", "0.25`", ",", "1", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", "z"}], MultilineFunction -> None], "/.", 
         "\[VeryThinSpace]", 
         RowBox[{"z", "\[Rule]", "x"}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.797144268654143*^9, 3.7971446413006687`*^9, 
  3.7971490934641447`*^9},ExpressionUUID->"a17d16a6-dafd-4926-9c12-\
bd7cbb4a006c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"hj", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"period", "[", 
      RowBox[{"1", ",", "0.25", ",", "1", ",", "z"}], "]"}], ",", "z"}], 
    "]"}], "/.", 
   RowBox[{"z", "\[Rule]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.7971444368852773`*^9, 3.7971444410980597`*^9}, {
  3.7971445925301423`*^9, 
  3.797144618579282*^9}},ExpressionUUID->"c751c593-1b1d-4ddb-9092-\
b8babffb8ac3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hj", "[", "2", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.7971444440910234`*^9, 3.797144445823634*^9}, {
  3.7971446089677505`*^9, 
  3.7971446102498503`*^9}},ExpressionUUID->"b58b67f2-5029-40e8-9a7f-\
6c0f52048895"],

Cell[BoxData["0.17751482986690667`"], "Output",
 CellChangeTimes->{
  3.7971444465633693`*^9, {3.797144604765133*^9, 
   3.797144621013851*^9}},ExpressionUUID->"e59c1ea5-43c1-4325-8c92-\
b1eb4c227fa1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"period", "[", 
  RowBox[{"1", ",", "0.25", ",", "1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7971444674957533`*^9, 
  3.7971444757133293`*^9}},ExpressionUUID->"550ead61-c10c-4279-bd2f-\
6135ad17a71f"],

Cell[BoxData["1.078087207591399`"], "Output",
 CellChangeTimes->{
  3.7971444763252926`*^9},ExpressionUUID->"9f59e1dd-67da-43a3-b45d-\
4614dc7e4742"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LJder", "[", 
    RowBox[{"delta_", ",", "p_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"LJ", "[", 
       RowBox[{"delta", ",", "z"}], "]"}], ",", "z"}], "]"}], "/.", 
    RowBox[{"z", "\[Rule]", "p"}]}]}], "\[IndentingNewLine]"}]], "Input",Expre\
ssionUUID->"e867e001-3d8a-4f0e-97f6-65d6dc119c44"],

Cell[BoxData[
 RowBox[{
  RowBox[{"w1", "[", 
   RowBox[{"k_", ",", "mu_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "3"}], "*", 
   RowBox[{"mu", "^", "2"}], "*", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "k"}], ")"}], "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"k", "^", "2"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7971511445370336`*^9, 
  3.7971511786355762`*^9}},ExpressionUUID->"5e9e7fa0-802b-42c5-ad89-\
641a1c3731f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"w2", "[", 
   RowBox[{"k_", ",", "mu_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "3"}], "*", 
   RowBox[{"mu", "^", "2"}], "*", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "k"}], ")"}], "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"k", "^", "2"}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w3", "[", 
   RowBox[{"k_", ",", "mu_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], "*", 
    RowBox[{"mu", "^", "2"}]}], "-", 
   RowBox[{"2", "*", 
    RowBox[{"mu", "^", "2"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "+", 
        RowBox[{"14", 
         RowBox[{"k", "^", "2"}]}], "+", 
        RowBox[{"k", "^", "4"}]}], "]"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"k", "^", "2"}]}], ")"}]}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7971511880156*^9, 
  3.797151246460643*^9}},ExpressionUUID->"ebe10395-8e18-4786-9dad-\
64d639f43f85"],

Cell[BoxData[
 RowBox[{
  RowBox[{"w4", "[", 
   RowBox[{"k_", ",", "mu_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], "*", 
    RowBox[{"mu", "^", "2"}]}], "+", 
   RowBox[{"2", "*", 
    RowBox[{"mu", "^", "2"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "+", 
        RowBox[{"14", 
         RowBox[{"k", "^", "2"}]}], "+", 
        RowBox[{"k", "^", "4"}]}], "]"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"k", "^", "2"}]}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7971512576503525`*^9, 3.797151257757082*^9}, {
  3.7971513316963353`*^9, 
  3.797151332014518*^9}},ExpressionUUID->"5f4b425c-632e-4460-983c-\
ecc1424c2c4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"w1", "[", 
      RowBox[{"k", ",", "1"}], "]"}], ",", 
     RowBox[{"w2", "[", 
      RowBox[{"k", ",", "1"}], "]"}], ",", 
     RowBox[{"w3", "[", 
      RowBox[{"k", ",", "1"}], "]"}], ",", 
     RowBox[{"w4", "[", 
      RowBox[{"k", ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.797151262778517*^9, 
  3.7971513179850035`*^9}},ExpressionUUID->"e8b160ec-b9bf-4c11-aeb2-\
ce26f5e4a237"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVkHk4lA0bxYUabWRJpJKIbPFKXindryzZEkpUsoVKG1otycgWikpCZYlC
yqjRNph7LCFUo0moUBOTmpnnobKG+Xx/nOtc5zp//M511PyOuwaIi4mJFczo
/24fMNDG+uG22Y+WRopEFJak5dLgXmVjIIQrNTdOUljrcjNv0ZWtwPfze8/T
YxSWw+uOx7eVd4JqvEmLYJDCcvcfrb6q7A/M9U20rq8UVrdBguUl5ZOQ82vf
M3odhZW3eHt8knIs/FGRYRxKoLCoUnSti8rpcFZDck+/NIXlsTufNjhUCBWq
2cfWzJvDmi+iem5dQQOmXdnwwJLZrNUuxEBdcgUEzXZbrKInyTrzZgNk/nkB
rfW5Zey1EqwlFbI9s2YhPGzZzna1Fmc95Vq2vt1UC5r97FGK4yxWbdBtld2C
engj8mUU7hVjDWuayzw82ggPrP5kXBZNo/h46SKV1c2wRlzb8F/9KTQR+Tzd
UdYKm7elrY2N/YutscZvGnTegn/PaY8uYhxV0/jjJQQbIussBt0tx5A/2tvT
bvgO5ugRS7isESz8WdksfZkDBp/+ZirqDaP08iKyr+89PFLncUMe/saUQ08C
8zQ+QGyaWaLSrl848l9p38HzHTDAizN9PjiIJ43qKxTrOiGp6rRnnx+JvWX1
yW1qH0Ek5cMPfCPAv0Hvb2qHfwKzBo5uV8BP1LWgTAdWfgYHNs15teUAbr2j
duDRkh7wSQpkOMvy8Mxy71VfPXuhIvyVSaJaH+oJ3OZ3bPsCb5/w1NR3cVFe
ZlCqfuIL7ClSWaxJ/YKSeJOmfusrEIFBTZqvu/GwcWXXXAcumGxbd2E45SOW
2vnlMUe4UCY+aSlK78Bh/tJFvIxvkFh56QVjVjs+2bFVIt2qDyYawz5YHX6H
523jcit4faBw1Ksr15CNat32nQVx/bB2vZ5gyqMVzf6NTVc24kH4PLOMkF1N
6Lni7fgsDg9iO4LMzYX1ONx8iRtM/Q7lIX5GxtdqMFPS66SrxgAYF089uH6h
GuV7ntwRrx+APA0nS4+U5zj7HHXnhpAfMO7pw+bU0lGsxIvGlfsJptT1Z1VK
aBiaTbskV/sTYjSPVqZZFGO1bqKU7DE+iDHCRxRl7qDJ+yWvrwbzYXFWgvTA
eD6WRxZdUTjBh15/eZ3Gvny887phqdJZPtw3Ou5DY+Rj4vHZ+qoxfKhaVhmh
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

          "]]}, Annotation[#, "Charting`Private`Tag$69908490#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
NDL+QuYlrjXz1dc0pGZXVjCs/D8o9D+LLj+c
          "]]}, Annotation[#, "Charting`Private`Tag$69908490#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
pGDx/4NE/wNYvTY3
          "]]}, Annotation[#, "Charting`Private`Tag$69908490#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
IFdg
          "]]}, 
        Annotation[#, "Charting`Private`Tag$69908490#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-5.999999999999999, 1.9999999999999991`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"w1", "(", 
         RowBox[{"k", ",", "1"}], ")"}], 
       RowBox[{"w2", "(", 
         RowBox[{"k", ",", "1"}], ")"}], 
       RowBox[{"w3", "(", 
         RowBox[{"k", ",", "1"}], ")"}], 
       RowBox[{"w4", "(", 
         RowBox[{"k", ",", "1"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.797151285602335*^9, 
  3.7971513364138412`*^9}},ExpressionUUID->"a874b13d-f88a-41f0-93d9-\
c4d869d9642d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", " ", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", "  ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"0.5", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"period", "[", 
            RowBox[{"1", ",", "k", ",", "1", ",", "x"}], "]"}], ",", "x"}], 
          "]"}], ")"}], "^", "2"}]}], "+", 
      RowBox[{"paper", "[", 
       RowBox[{"1", ",", "1", ",", 
        RowBox[{"period", "[", 
         RowBox[{"1", ",", "k", ",", "1", ",", "x"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.797272866033491*^9, 3.797272924145707*^9}, {
  3.7972732415632515`*^9, 
  3.7972732419616756`*^9}},ExpressionUUID->"3eb52006-1283-4091-852b-\
313f54f60315"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox[
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"JacobiSN", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"10", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "k"}], ")"}]}], 
          SqrtBox[
           RowBox[{"1", "+", 
            SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], "2"], " ", 
      RowBox[{"(", 
       InterpretationBox[
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}], "+", 
         InterpretationBox[
          SuperscriptBox[
           RowBox[{"O", "[", 
            RowBox[{"k", "-", "1"}], "]"}], "4"],
          SeriesData[$CellContext`k, 1, {}, 0, 4, 1],
          Editable->False]}],
        SeriesData[$CellContext`k, 1, {-1, -1}, 0, 4, 1],
        Editable->False], ")"}]}]}]]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"JacobiSN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"10", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "k"}], ")"}]}], 
            SqrtBox[
             RowBox[{"1", "+", 
              SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], "2"], " ", 
        RowBox[{"(", 
         InterpretationBox[
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"(", 
            RowBox[{"k", "-", "1"}], ")"}], "+", 
           InterpretationBox[
            SuperscriptBox[
             RowBox[{"O", "[", 
              RowBox[{"k", "-", "1"}], "]"}], "4"],
            SeriesData[$CellContext`k, 1, {}, 0, 4, 1],
            Editable->False]}],
          SeriesData[$CellContext`k, 1, {-1, -1}, 0, 4, 1],
          Editable->False], ")"}]}]}]], " ", 
     RowBox[{"(", 
      InterpretationBox[
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"20", " ", 
           RowBox[{"(", 
            RowBox[{"k", "-", "1"}], ")"}]}], "3"]}], "+", 
        RowBox[{
         FractionBox["10", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "3"]}], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", 
           RowBox[{"k", "-", "1"}], "]"}], "4"],
         SeriesData[$CellContext`k, 1, {}, 1, 4, 1],
         Editable->False]}],
       SeriesData[$CellContext`k, 1, {
         Rational[-20, 3], 0, 
         Rational[10, 3]}, 1, 4, 1],
       Editable->False], ")"}]}], "+", 
    RowBox[{
     RowBox[{"JacobiDN", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"10", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "k"}], ")"}]}], 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], " ", 
     RowBox[{"(", 
      InterpretationBox[
       RowBox[{
        RowBox[{"13.333333333333332`", " ", 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}]}], "-", 
        RowBox[{"6.666666666666666`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "3"]}], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", 
           RowBox[{"k", "-", "1"}], "]"}], "4"],
         SeriesData[$CellContext`k, 1, {}, 1, 4, 1],
         Editable->False]}],
       SeriesData[$CellContext`k, 1, {13.333333333333332`, 
        0., -6.666666666666666}, 1, 4, 1],
       Editable->False], ")"}]}], "+", 
    RowBox[{
     RowBox[{"JacobiCN", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"10", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "k"}], ")"}]}], 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], " ", 
     RowBox[{"JacobiDN", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"10", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "k"}], ")"}]}], 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], " ", 
     RowBox[{"JacobiSN", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"10", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "k"}], ")"}]}], 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"JacobiSN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"10", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "k"}], ")"}]}], 
            SqrtBox[
             RowBox[{"1", "+", 
              SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], "2"], " ", 
        RowBox[{"(", 
         InterpretationBox[
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"(", 
            RowBox[{"k", "-", "1"}], ")"}], "+", 
           InterpretationBox[
            SuperscriptBox[
             RowBox[{"O", "[", 
              RowBox[{"k", "-", "1"}], "]"}], "4"],
            SeriesData[$CellContext`k, 1, {}, 0, 4, 1],
            Editable->False]}],
          SeriesData[$CellContext`k, 1, {-1, -1}, 0, 4, 1],
          Editable->False], ")"}]}]}]], " ", 
     RowBox[{"(", 
      InterpretationBox[
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          SqrtBox["2"], "3"]}], "-", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}]}], "+", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "2"], 
         RowBox[{"4", " ", 
          SqrtBox["2"]}]], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", 
           RowBox[{"k", "-", "1"}], "]"}], "4"],
         SeriesData[$CellContext`k, 1, {}, 0, 4, 1],
         Editable->False]}],
       SeriesData[$CellContext`k, 1, {
        Rational[-1, 3] 2^Rational[1, 2], Rational[-1, 3] 2^Rational[1, 2], 
         Rational[1, 4] 2^Rational[-1, 2]}, 0, 4, 1],
       Editable->False], ")"}]}], "+", 
    RowBox[{
     RowBox[{"JacobiCN", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"10", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "k"}], ")"}]}], 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], " ", 
     RowBox[{"JacobiDN", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"10", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "k"}], ")"}]}], 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], " ", 
     RowBox[{"JacobiSN", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"10", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "k"}], ")"}]}], 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"JacobiSN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"10", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "k"}], ")"}]}], 
            SqrtBox[
             RowBox[{"1", "+", 
              SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], "2"], " ", 
        RowBox[{"(", 
         InterpretationBox[
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"(", 
            RowBox[{"k", "-", "1"}], ")"}], "+", 
           InterpretationBox[
            SuperscriptBox[
             RowBox[{"O", "[", 
              RowBox[{"k", "-", "1"}], "]"}], "4"],
            SeriesData[$CellContext`k, 1, {}, 0, 4, 1],
            Editable->False]}],
          SeriesData[$CellContext`k, 1, {-1, -1}, 0, 4, 1],
          Editable->False], ")"}]}], "+", 
       RowBox[{"(", 
        InterpretationBox[
         RowBox[{"1", "-", 
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "+", 
          InterpretationBox[
           SuperscriptBox[
            RowBox[{"O", "[", 
             RowBox[{"k", "-", "1"}], "]"}], "4"],
           SeriesData[$CellContext`k, 1, {}, 0, 4, 1],
           Editable->False]}],
         SeriesData[$CellContext`k, 1, {1, -1}, 0, 4, 1],
         Editable->False], ")"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"JacobiCN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"10", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "k"}], ")"}]}], 
            SqrtBox[
             RowBox[{"1", "+", 
              SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], "2"], " ", 
        RowBox[{"(", 
         InterpretationBox[
          RowBox[{"1", "+", 
           RowBox[{"(", 
            RowBox[{"k", "-", "1"}], ")"}], "+", 
           InterpretationBox[
            SuperscriptBox[
             RowBox[{"O", "[", 
              RowBox[{"k", "-", "1"}], "]"}], "4"],
            SeriesData[$CellContext`k, 1, {}, 0, 4, 1],
            Editable->False]}],
          SeriesData[$CellContext`k, 1, {1, 1}, 0, 4, 1],
          Editable->False], ")"}]}]}]], " ", 
     RowBox[{"(", 
      InterpretationBox[
       RowBox[{
        RowBox[{"-", "0.3333333333333333`"}], "-", 
        RowBox[{"0.33333333333333337`", " ", 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}]}], "+", 
        RowBox[{"0.12500000000000006`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "2"]}], "-", 
        RowBox[{"1.3877787807814457`*^-17", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "3"]}], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", 
           RowBox[{"k", "-", "1"}], "]"}], "4"],
         SeriesData[$CellContext`k, 1, {}, 0, 4, 1],
         Editable->False]}],
       SeriesData[$CellContext`k, 
        1, {-0.3333333333333333, -0.33333333333333337`, 
        0.12500000000000006`, -1.3877787807814457`*^-17}, 0, 4, 1],
       Editable->False], ")"}]}], "+", 
    RowBox[{
     RowBox[{"EllipticE", "[", 
      RowBox[{
       RowBox[{"JacobiAmplitude", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"10", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "k"}], ")"}]}], 
          SqrtBox[
           RowBox[{"1", "+", 
            SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], ",", "k"}], 
      "]"}], " ", 
     RowBox[{"JacobiDN", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"10", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "k"}], ")"}]}], 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], " ", 
     RowBox[{"(", 
      InterpretationBox[
       RowBox[{"0.47140452079103173`", "-", 
        RowBox[{"0.47140452079103173`", " ", 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}]}], "-", 
        RowBox[{"0.17677669529663687`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "2"]}], "+", 
        RowBox[{"0.3535533905932738`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "3"]}], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", 
           RowBox[{"k", "-", "1"}], "]"}], "4"],
         SeriesData[$CellContext`k, 1, {}, 0, 4, 1],
         Editable->False]}],
       SeriesData[$CellContext`k, 1, {
        0.47140452079103173`, -0.47140452079103173`, -0.17677669529663687`, 
        0.3535533905932738}, 0, 4, 1],
       Editable->False], ")"}]}], "+", 
    RowBox[{
     RowBox[{"EllipticE", "[", 
      RowBox[{
       RowBox[{"JacobiAmplitude", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"10", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "k"}], ")"}]}], 
          SqrtBox[
           RowBox[{"1", "+", 
            SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], ",", "k"}], 
      "]"}], " ", 
     RowBox[{"JacobiDN", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"10", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "k"}], ")"}]}], 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], " ", 
     RowBox[{"(", 
      InterpretationBox[
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", 
           SqrtBox["2"]}], "3"]}], "+", 
        RowBox[{
         FractionBox["2", "3"], " ", 
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}]}], "+", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "2"], 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]], "-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "3"], 
         SqrtBox["2"]], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", 
           RowBox[{"k", "-", "1"}], "]"}], "4"],
         SeriesData[$CellContext`k, 1, {}, 0, 4, 1],
         Editable->False]}],
       SeriesData[$CellContext`k, 1, {
        Rational[-2, 3] 2^Rational[1, 2], Rational[2, 3] 2^Rational[1, 2], 
         Rational[1, 2] 2^Rational[-1, 2], -2^Rational[-1, 2]}, 0, 4, 1],
       Editable->False], ")"}]}], "+", 
    RowBox[{
     RowBox[{"EllipticE", "[", 
      RowBox[{
       RowBox[{"JacobiAmplitude", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"10", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "k"}], ")"}]}], 
          SqrtBox[
           RowBox[{"1", "+", 
            SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], ",", "k"}], 
      "]"}], " ", 
     RowBox[{"JacobiDN", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"10", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "k"}], ")"}]}], 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["k", "2"]}]]], ",", "k"}], "]"}], " ", 
     RowBox[{"(", 
      InterpretationBox[
       RowBox[{
        SqrtBox["2"], "-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "2"], 
         RowBox[{"4", " ", 
          SqrtBox["2"]}]], "+", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "3"], 
         RowBox[{"4", " ", 
          SqrtBox["2"]}]], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", 
           RowBox[{"k", "-", "1"}], "]"}], "4"],
         SeriesData[$CellContext`k, 1, {}, 0, 4, 1],
         Editable->False]}],
       SeriesData[$CellContext`k, 1, {
        2^Rational[1, 2], 0, Rational[-1, 4] 2^Rational[-1, 2], 
         Rational[1, 4] 2^Rational[-1, 2]}, 0, 4, 1],
       Editable->False], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7972729679346814`*^9, 
  3.7972732833285437`*^9},ExpressionUUID->"add5ce11-e5d6-4d8e-b391-\
411992985376"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "[", 
   RowBox[{"x_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"x", "+", "k"}]}]], "Input",
 CellChangeTimes->{{3.797273358765682*^9, 
  3.797273398419875*^9}},ExpressionUUID->"c35e09d0-6780-45d3-88d0-\
4bd07141b2f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"c1", "[", "k_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{"x", ",", "k"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.797273404172186*^9, 3.7972734676871004`*^9}, 
   3.797273514092169*^9},ExpressionUUID->"db851274-9a99-4343-9964-\
66c0e5127e70"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"c1", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7972734418815594`*^9, 
  3.7972734541369486`*^9}},ExpressionUUID->"da9826d2-b785-4f77-a9eb-\
d2f6291ed3b2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", "2"], "+", "k", "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "k", "]"}], "4"],
    SeriesData[$CellContext`k, 0, {}, 0, 4, 1],
    Editable->False]}],
  SeriesData[$CellContext`k, 0, {
    Rational[1, 2], 1}, 0, 4, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.7972734548748894`*^9, 3.7972734712159176`*^9}, 
   3.7972735174774117`*^9},ExpressionUUID->"d1e9f71b-66bd-45d3-aec4-\
f48fe7022c16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c1", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.7972734918422594`*^9, 
  3.797273526224369*^9}},ExpressionUUID->"4125c351-d666-4feb-a436-\
74d55fb26427"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{
  3.79727352830851*^9},ExpressionUUID->"c2f31bf6-7382-4632-962f-dd0ae937d478"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"energyconfig", "[", 
  RowBox[{"20", ",", "1", ",", "1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.797273728793094*^9, 
  3.7972737450447516`*^9}},ExpressionUUID->"4bb23e2f-3710-47e2-914f-\
692b9f19df87"],

Cell[BoxData["0.9428090415820317`"], "Output",
 CellChangeTimes->{
  3.797273745858419*^9},ExpressionUUID->"e0137655-841b-40cc-90ac-\
6c044b8f9270"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.797273523232802*^9, 
  3.7972735232454524`*^9}},ExpressionUUID->"09bb6c13-8e7e-4ea5-be9d-\
e4c2f8f03393"]
},
WindowSize->{1553, 817},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 176, 4, 28, "Input",ExpressionUUID->"7e90b03c-c78e-4cec-a0c0-359cff093c0e"],
Cell[737, 26, 1816, 60, 86, "Input",ExpressionUUID->"6e22ecad-c5d4-4571-882e-85eb5988ae58"],
Cell[CellGroupData[{
Cell[2578, 90, 1067, 26, 28, "Input",ExpressionUUID->"735489b4-7b1d-4ad4-b223-bb4dbaf82f6b"],
Cell[3648, 118, 85516, 1514, 240, "Output",ExpressionUUID->"2a6797f0-99c1-4c8d-ad14-fbe9dd43f8aa"]
}, Open  ]],
Cell[89179, 1635, 462, 13, 28, "Input",ExpressionUUID->"5b8bdd49-68cc-4a29-9110-2a3d6cb7d9b6"],
Cell[CellGroupData[{
Cell[89666, 1652, 374, 11, 28, "Input",ExpressionUUID->"5dbb0550-6f36-431b-97ef-9e40ddab3fb9"],
Cell[90043, 1665, 14084, 249, 245, "Output",ExpressionUUID->"4a44f9a4-d00b-4972-882e-445a40a568b5"]
}, Open  ]],
Cell[104142, 1917, 557, 18, 28, "Input",ExpressionUUID->"95b9febe-95df-4a09-8158-04c4c7deebb7"],
Cell[104702, 1937, 732, 23, 28, "Input",ExpressionUUID->"2ce41760-05f0-436c-bdd9-e7511cd84a68"],
Cell[CellGroupData[{
Cell[105459, 1964, 685, 19, 28, "Input",ExpressionUUID->"9f628ed7-44f4-40eb-8004-e1c33bfb3b99"],
Cell[106147, 1985, 43501, 773, 242, "Output",ExpressionUUID->"a1a3fb61-2d2e-4552-b16e-24a9bffcb9e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149685, 2763, 589, 18, 28, "Input",ExpressionUUID->"e6d35038-f0b0-41ff-8087-91a56a760ff0"],
Cell[150277, 2783, 16773, 293, 244, "Output",ExpressionUUID->"aa155d8a-65bd-4f8d-9ffc-f064856e1d0b"]
}, Open  ]],
Cell[167065, 3079, 1006, 30, 28, "Input",ExpressionUUID->"1bdf1b35-39a7-4bfc-a2ac-9e78d827a29d"],
Cell[CellGroupData[{
Cell[168096, 3113, 836, 20, 28, "Input",ExpressionUUID->"30aacd03-1ef2-4dd5-8aa4-1f338f872078"],
Cell[168935, 3135, 70445, 1230, 247, "Output",ExpressionUUID->"e9828b3d-700b-40c8-802c-2c2c82e48b16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239417, 4370, 1259, 28, 105, "Input",ExpressionUUID->"b11c8cf9-ab48-4aef-99e3-7dd6ff54de40"],
Cell[240679, 4400, 128697, 2203, 246, "Output",ExpressionUUID->"38855bfb-bf0f-4a6b-a506-f875536cb6d6"]
}, Open  ]],
Cell[369391, 6606, 760, 23, 28, "Input",ExpressionUUID->"41de6a84-f533-46c5-8f58-ea84324706b6"],
Cell[CellGroupData[{
Cell[370176, 6633, 303, 7, 28, "Input",ExpressionUUID->"56dbe6c3-60af-477e-8027-103eb1d5d3d2"],
Cell[370482, 6642, 340, 6, 32, "Output",ExpressionUUID->"a88af5ce-823c-4435-b823-052e37d5580f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370859, 6653, 253, 6, 28, "Input",ExpressionUUID->"45144877-f752-45e9-a0cd-0636e6a2dbd3"],
Cell[371115, 6661, 270, 6, 32, "Output",ExpressionUUID->"5f6afbe4-a78f-405d-8efd-4f691643d388"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371422, 6672, 392, 11, 28, "Input",ExpressionUUID->"8b9d8543-c904-41aa-9b03-4f7cbdf477c3"],
Cell[371817, 6685, 295, 6, 32, "Output",ExpressionUUID->"4c5ab1d6-ac97-4005-9711-411f083f551c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372149, 6696, 188, 4, 28, "Input",ExpressionUUID->"73d76dda-1cd8-4bef-8a45-0cbbc9e33615"],
Cell[372340, 6702, 205, 4, 53, "Output",ExpressionUUID->"01359bfc-7206-4d89-8116-66b95ab4467b"]
}, Open  ]],
Cell[372560, 6709, 1427, 36, 48, "Input",ExpressionUUID->"6a9e6021-cc5b-4b20-9f30-8b3d163d15e2"],
Cell[CellGroupData[{
Cell[374012, 6749, 830, 22, 28, "Input",ExpressionUUID->"91d65ea6-ccd2-421e-8f9b-a47dadfe0084"],
Cell[374845, 6773, 37983, 732, 242, "Output",ExpressionUUID->"7052ea14-498b-43ae-bc0c-190b89e5081e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412865, 7510, 937, 19, 86, "Input",ExpressionUUID->"860c4535-3178-47db-b515-1dde0f2f300f"],
Cell[413805, 7531, 7504, 141, 238, "Output",ExpressionUUID->"0122d2c1-8a01-48e9-8db8-895b1655d830"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421346, 7677, 330, 8, 86, "Input",ExpressionUUID->"c9e88118-7edc-4822-b236-b626afbc5ef3"],
Cell[421679, 7687, 182, 4, 32, "Output",ExpressionUUID->"9f468f5e-01d1-42e8-a669-a0df4519c4d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421898, 7696, 983, 23, 86, "Input",ExpressionUUID->"9727a1ad-2782-46b9-8d53-84bfb397e4f3"],
Cell[422884, 7721, 573, 11, 39, "Message",ExpressionUUID->"21f9ee2e-e331-41a4-83af-fd53a659a541"],
Cell[423460, 7734, 276, 6, 32, "Output",ExpressionUUID->"a790dd58-2330-4737-9bc3-733971c74bb8"],
Cell[423739, 7742, 573, 11, 39, "Message",ExpressionUUID->"83a02d7d-8347-4894-95ee-ab46efc7ed31"],
Cell[424315, 7755, 274, 6, 32, "Output",ExpressionUUID->"3c9f80b5-b39c-46d9-8101-a898b8e87fdb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424626, 7766, 407, 9, 28, "Input",ExpressionUUID->"d446a879-4542-460e-b3bd-024d20f04fa9"],
Cell[425036, 7777, 266, 4, 32, "Output",ExpressionUUID->"bae837fa-aeff-4736-b2ef-353bc8e8e3b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425339, 7786, 358, 9, 28, "Input",ExpressionUUID->"53ec2153-2801-4293-b233-811f2217475a"],
Cell[425700, 7797, 265, 6, 32, "Output",ExpressionUUID->"e38b26cb-9357-4985-9e83-8fde0edcfa52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426002, 7808, 928, 22, 105, "Input",ExpressionUUID->"7e7bf4b6-cc9a-4a05-9dab-368ebf9493e3"],
Cell[426933, 7832, 85931, 1484, 247, "Output",ExpressionUUID->"1c7987a5-3939-4ac4-bf60-c731daef6c93"]
}, Open  ]],
Cell[512879, 9319, 151, 3, 28, "Input",ExpressionUUID->"3bfb08e4-0d68-491d-9b2a-84252b8ebb50"],
Cell[513033, 9324, 795, 21, 28, "Input",ExpressionUUID->"ff71fd9d-2cff-4309-ab4d-f3e467176b38"],
Cell[513831, 9347, 232, 5, 86, "Input",ExpressionUUID->"5dc0d7dd-7b9c-4cf8-883c-43ddcb838bba"],
Cell[CellGroupData[{
Cell[514088, 9356, 460, 11, 28, "Input",ExpressionUUID->"cb76b4b4-3a42-40dc-9032-7f634131812b"],
Cell[514551, 9369, 276, 6, 32, "Output",ExpressionUUID->"1be26277-faad-41f9-8faf-3a2e417f4f08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[514864, 9380, 297, 6, 28, "Input",ExpressionUUID->"c4b97937-11fd-4025-a669-e90640418177"],
Cell[515164, 9388, 172, 3, 32, "Output",ExpressionUUID->"b6d026a7-347f-4fe3-89a8-e092e534b0be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[515373, 9396, 344, 9, 28, "Input",ExpressionUUID->"68d312e0-e7a6-405d-ab68-1b3d722577c4"],
Cell[515720, 9407, 294, 7, 32, "Output",ExpressionUUID->"767a16d1-2a79-45e4-9bc7-797460995a07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516051, 9419, 486, 14, 28, "Input",ExpressionUUID->"bad46f70-e737-4427-89fc-2f72604ad76a"],
Cell[516540, 9435, 673, 16, 32, "Output",ExpressionUUID->"9689ad25-5282-4f1a-bfb2-e5c734048caa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[517250, 9456, 742, 19, 28, "Input",ExpressionUUID->"a44830eb-f705-41f9-8266-cd961f7cc4cc"],
Cell[517995, 9477, 414, 9, 32, "Output",ExpressionUUID->"a711ada7-8803-45b8-9692-3641ab2a530e"]
}, Open  ]],
Cell[518424, 9489, 152, 3, 28, "Input",ExpressionUUID->"7d9a25ac-17cb-474c-a054-37c26497ac95"],
Cell[518579, 9494, 884, 29, 28, "Input",ExpressionUUID->"7a0543d9-76c4-4cd2-8322-6fc1806f92f3"],
Cell[CellGroupData[{
Cell[519488, 9527, 1017, 26, 28, "Input",ExpressionUUID->"3def824a-704d-4d32-a5b7-01f424e92ab6"],
Cell[520508, 9555, 215, 4, 32, "Output",ExpressionUUID->"3f177532-2272-472c-a922-a0d04a7fa4cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[520760, 9564, 916, 25, 28, "Input",ExpressionUUID->"296eb6f9-be6a-41dc-9f93-8a0b05258b35"],
Cell[521679, 9591, 217, 4, 32, "Output",ExpressionUUID->"96b0141e-034d-4b71-8e27-2e73d5e7dea8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[521933, 9600, 916, 25, 28, "Input",ExpressionUUID->"373bd63c-bc99-490c-b3fe-6c9856b681a8"],
Cell[522852, 9627, 218, 4, 32, "Output",ExpressionUUID->"9220624a-8f2f-4219-9e09-c63bfbdd4b54"]
}, Open  ]],
Cell[523085, 9634, 154, 3, 28, "Input",ExpressionUUID->"a33a0db7-2da9-4666-a923-c4cdad598523"],
Cell[CellGroupData[{
Cell[523264, 9641, 849, 24, 28, "Input",ExpressionUUID->"b8dbfa92-1d0b-4e10-ae6e-7765f9b016b6"],
Cell[524116, 9667, 364, 9, 32, "Output",ExpressionUUID->"c35a51e5-3f22-4083-a30b-62f7a946ae93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524517, 9681, 828, 24, 86, "Input",ExpressionUUID->"ed38864e-d909-42c4-9711-19a866defd8b"],
Cell[525348, 9707, 383, 9, 32, "Output",ExpressionUUID->"823a587b-a7fd-4226-95ec-e5b968d5ea27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[525768, 9721, 328, 9, 28, "Input",ExpressionUUID->"b8e1dc63-b627-40b8-92fe-d730291cada0"],
Cell[526099, 9732, 4842, 97, 235, "Output",ExpressionUUID->"f0ea8728-0540-4f18-9344-77c20e9a3f00"]
}, Open  ]],
Cell[530956, 9832, 3530, 88, 86, "Input",ExpressionUUID->"2080d182-7ca8-493d-830c-796f0c9049f4"],
Cell[CellGroupData[{
Cell[534511, 9924, 963, 18, 162, "Input",ExpressionUUID->"0abc9d0d-caca-4593-97ae-d4b1c3e74ad7"],
Cell[535477, 9944, 242, 5, 32, "Output",ExpressionUUID->"3aa48f61-3ce1-4ec6-b527-5280f2fb9d4e"],
Cell[535722, 9951, 372, 9, 32, "Output",ExpressionUUID->"0639938e-f08e-41e5-99f0-3fc0444928cf"]
}, Open  ]],
Cell[536109, 9963, 1265, 34, 28, "Input",ExpressionUUID->"e62ce0f9-a9a0-4679-987d-d29c5bd789ec"],
Cell[CellGroupData[{
Cell[537399, 10001, 431, 8, 28, "Input",ExpressionUUID->"c1384821-4072-4659-82d2-4ab5c912b4d8"],
Cell[537833, 10011, 663, 14, 32, "Output",ExpressionUUID->"fb9fd3df-5a1c-4e6a-84a4-842e88e40ff5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538533, 10030, 639, 14, 28, "Input",ExpressionUUID->"ebfff79f-7813-442e-b1c8-f80389264b50"],
Cell[539175, 10046, 477, 10, 32, "Output",ExpressionUUID->"52155849-6d26-47ab-bc3c-170d85bbbb69"]
}, Open  ]],
Cell[539667, 10059, 179, 3, 28, "Input",ExpressionUUID->"0dba7978-a822-422c-8df2-6494b71bd2e5"],
Cell[539849, 10064, 2573, 68, 67, "Input",ExpressionUUID->"a0ac98b7-2508-4b0a-b465-2a878d70f2cb"],
Cell[CellGroupData[{
Cell[542447, 10136, 266, 6, 28, "Input",ExpressionUUID->"dc7872c5-f24c-43de-be25-856deeb11be7"],
Cell[542716, 10144, 801, 17, 36, "Output",ExpressionUUID->"d7481d21-197a-4b30-8a82-aa6c83d9bd25"]
}, Open  ]],
Cell[543532, 10164, 3511, 90, 86, "Input",ExpressionUUID->"c5b3d477-846c-4f58-9c95-642206b0759c"],
Cell[CellGroupData[{
Cell[547068, 10258, 566, 9, 28, "Input",ExpressionUUID->"780b1915-d0b3-4e6f-964d-a2d67059de09"],
Cell[547637, 10269, 1177, 23, 36, "Output",ExpressionUUID->"fb056a09-ca77-423c-8fe4-e824a5db177b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548851, 10297, 522, 9, 28, "Input",ExpressionUUID->"771bbaa3-6bc0-4c77-be26-cc939b5dd36d"],
Cell[549376, 10308, 861, 20, 32, "Output",ExpressionUUID->"3c6d725e-aa63-4769-939d-afeebef034dd"]
}, Open  ]],
Cell[550252, 10331, 2253, 60, 67, "Input",ExpressionUUID->"94c217a0-8fbb-496a-8677-97cf939ce15e"],
Cell[CellGroupData[{
Cell[552530, 10395, 298, 6, 28, "Input",ExpressionUUID->"ddb63891-57fe-441b-b074-a8b00da6f30d"],
Cell[552831, 10403, 489, 11, 32, "Output",ExpressionUUID->"ce9eea7b-c235-41c6-986a-ebb4152a6940"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553357, 10419, 305, 7, 28, "Input",ExpressionUUID->"c9478849-9864-47cb-99c2-c2ea8cb3fbe9"],
Cell[553665, 10428, 513, 12, 32, "Output",ExpressionUUID->"9baf982f-83d6-4fe6-9ac6-00a06d0b0c38"]
}, Open  ]],
Cell[554193, 10443, 2861, 76, 67, "Input",ExpressionUUID->"0c8f833e-132b-4de4-b855-72393c135e44"],
Cell[557057, 10521, 699, 19, 28, "Input",ExpressionUUID->"42ac2587-6847-4b75-934e-a9d5e96b2a99"],
Cell[CellGroupData[{
Cell[557781, 10544, 249, 5, 28, "Input",ExpressionUUID->"5dddf8aa-759d-4db0-b80d-483b9f4f88c9"],
Cell[558033, 10551, 617, 17, 32, "Output",ExpressionUUID->"a2a0f887-ab0a-49f2-bde5-7e35f1169c85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[558687, 10573, 304, 7, 28, "Input",ExpressionUUID->"f37a22c4-ca4b-4b04-aed0-4ea809244e22"],
Cell[558994, 10582, 767, 23, 32, "Output",ExpressionUUID->"d8f080a3-0f02-44c8-997c-cefba6a5f43d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559798, 10610, 258, 6, 28, "Input",ExpressionUUID->"63b3680f-b32a-408e-a8d1-247f1eb1beaa"],
Cell[560059, 10618, 619, 17, 32, "Output",ExpressionUUID->"e6918d28-7590-4481-b8d6-72410803fa71"]
}, Open  ]],
Cell[560693, 10638, 1662, 44, 48, "Input",ExpressionUUID->"f5988a43-8bf7-4616-b99d-1997f4c3f30e"],
Cell[562358, 10684, 984, 25, 48, "Input",ExpressionUUID->"5b444c91-fc89-4da8-992a-c46f4c1de6bd"],
Cell[CellGroupData[{
Cell[563367, 10713, 468, 10, 28, "Input",ExpressionUUID->"dee4a9b0-98f8-4651-8d00-63da38d4aefe"],
Cell[563838, 10725, 321, 5, 32, "Output",ExpressionUUID->"a0623bb7-d0b0-4b0e-b5f9-31b7e6586645"]
}, Open  ]],
Cell[CellGroupData[{
Cell[564196, 10735, 420, 8, 86, "Input",ExpressionUUID->"6360a33d-7c53-4678-acc1-5b6348649d4d"],
Cell[564619, 10745, 277, 4, 32, "Output",ExpressionUUID->"61a88967-4630-4f0e-8351-538bcc7d4c26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[564933, 10754, 331, 6, 28, "Input",ExpressionUUID->"2b69b7c2-89d2-4edb-8693-4f55272c4e6b"],
Cell[565267, 10762, 187, 4, 36, "Output",ExpressionUUID->"227b7629-1444-4aea-83c9-5b15fa53c862"]
}, Open  ]],
Cell[CellGroupData[{
Cell[565491, 10771, 221, 5, 28, "Input",ExpressionUUID->"51fe99f1-ddac-46aa-87fb-b96dbb7e9c11"],
Cell[565715, 10778, 173, 4, 55, "Output",ExpressionUUID->"ad493cd9-cb7c-4afb-ab13-107716dafc0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[565925, 10787, 233, 6, 28, "Input",ExpressionUUID->"4c9e04f6-df0f-411e-8e21-f8b9be44be4d"],
Cell[566161, 10795, 148, 3, 32, "Output",ExpressionUUID->"95534789-ee64-4aee-b655-0b0d278dd5b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566346, 10803, 608, 13, 28, "Input",ExpressionUUID->"9d00dfd6-780a-4f71-bc5c-9cef1796bdcf"],
Cell[566957, 10818, 13207, 234, 235, "Output",ExpressionUUID->"6a3e8c38-667a-423a-8fdc-7d131d2ee11b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[580201, 11057, 261, 5, 28, "Input",ExpressionUUID->"48bb9e5a-537d-4dee-b62f-2810ff6397a9"],
Cell[580465, 11064, 168, 3, 32, "Output",ExpressionUUID->"80167368-ea3e-4476-bc2e-ae4f611f2432"]
}, Open  ]],
Cell[CellGroupData[{
Cell[580670, 11072, 516, 12, 28, "Input",ExpressionUUID->"139ff315-c108-42c0-a00b-0feaf62c5364"],
Cell[581189, 11086, 769, 13, 32, "Output",ExpressionUUID->"2814addb-98ed-41ed-a977-7aec8f889319"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581995, 11104, 288, 5, 28, "Input",ExpressionUUID->"a171b6bf-07c4-4426-a55f-414c493761f4"],
Cell[582286, 11111, 1707, 44, 244, "Output",ExpressionUUID->"e56c9fda-19ac-4358-82a1-266038981799"]
}, Open  ]],
Cell[CellGroupData[{
Cell[584030, 11160, 995, 26, 86, "Input",ExpressionUUID->"a7193119-1e13-4c30-aef2-325ca8871f33"],
Cell[585028, 11188, 3693, 75, 244, 1490, 39, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"d99f25ed-4785-42c6-8cf5-364aa71c1062"],
Cell[588724, 11265, 53470, 937, 242, "Output",ExpressionUUID->"a17d16a6-dafd-4926-9c12-bd7cbb4a006c"]
}, Open  ]],
Cell[642209, 12205, 460, 13, 28, "Input",ExpressionUUID->"c751c593-1b1d-4ddb-9092-b8babffb8ac3"],
Cell[CellGroupData[{
Cell[642694, 12222, 260, 6, 28, "Input",ExpressionUUID->"b58b67f2-5029-40e8-9a7f-6c0f52048895"],
Cell[642957, 12230, 201, 4, 32, "Output",ExpressionUUID->"e59c1ea5-43c1-4325-8c92-b1eb4c227fa1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643195, 12239, 235, 5, 28, "Input",ExpressionUUID->"550ead61-c10c-4279-bd2f-6135ad17a71f"],
Cell[643433, 12246, 149, 3, 32, "Output",ExpressionUUID->"9f59e1dd-67da-43a3-b45d-4614dc7e4742"]
}, Open  ]],
Cell[643597, 12252, 384, 11, 48, "Input",ExpressionUUID->"e867e001-3d8a-4f0e-97f6-65d6dc119c44"],
Cell[643984, 12265, 493, 16, 28, "Input",ExpressionUUID->"5e9e7fa0-802b-42c5-ad89-641a1c3731f0"],
Cell[644480, 12283, 1038, 35, 48, "Input",ExpressionUUID->"ebe10395-8e18-4786-9dad-64d639f43f85"],
Cell[645521, 12320, 727, 23, 28, "Input",ExpressionUUID->"5f4b425c-632e-4460-983c-ecc1424c2c4c"],
Cell[CellGroupData[{
Cell[646273, 12347, 648, 19, 28, "Input",ExpressionUUID->"e8b160ec-b9bf-4c11-aeb2-ce26f5e4a237"],
Cell[646924, 12368, 35469, 676, 238, "Output",ExpressionUUID->"a874b13d-f88a-41f0-93d9-c4d869d9642d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[682430, 13049, 927, 25, 48, "Input",ExpressionUUID->"3eb52006-1283-4091-852b-313f54f60315"],
Cell[683360, 13076, 15175, 462, 563, "Output",ExpressionUUID->"add5ce11-e5d6-4d8e-b391-411992985376"]
}, Open  ]],
Cell[698550, 13541, 253, 7, 28, "Input",ExpressionUUID->"c35e09d0-6780-45d3-88d0-4bd07141b2f6"],
Cell[698806, 13550, 408, 11, 28, "Input",ExpressionUUID->"db851274-9a99-4343-9964-66c0e5127e70"],
Cell[CellGroupData[{
Cell[699239, 13565, 301, 8, 28, "Input",ExpressionUUID->"da9826d2-b785-4f77-a9eb-d2f6291ed3b2"],
Cell[699543, 13575, 495, 14, 55, "Output",ExpressionUUID->"d1e9f71b-66bd-45d3-aec4-f48fe7022c16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[700075, 13594, 183, 4, 28, "Input",ExpressionUUID->"4125c351-d666-4feb-a436-74d55fb26427"],
Cell[700261, 13600, 147, 3, 55, "Output",ExpressionUUID->"c2f31bf6-7382-4632-962f-dd0ae937d478"]
}, Open  ]],
Cell[CellGroupData[{
Cell[700445, 13608, 237, 5, 28, "Input",ExpressionUUID->"4bb23e2f-3710-47e2-914f-692b9f19df87"],
Cell[700685, 13615, 148, 3, 32, "Output",ExpressionUUID->"e0137655-841b-40cc-90ac-6c044b8f9270"]
}, Open  ]],
Cell[700848, 13621, 154, 3, 28, InheritFromParent,ExpressionUUID->"09bb6c13-8e7e-4ea5-be9d-e4c2f8f03393"]
}
]
*)

